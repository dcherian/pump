[tool:pytest]
python_files=test_*.py

[flake8]
ignore=
    # whitespace before ':' - doesn't work well with black
    E203
    # too many leading #
    E266
    E402
    # line too long - let black worry about that
    E501
    # do not assign a lambda expression, use a def
    E731
    # line break before binary operator
    W503
    # invalid escape sequence : clashes with latex attributes
    W605
exclude=
    doc

[isort]
profile=black
default_section=THIRDPARTY
float_to_top=True
known_first_party=xarray,dcpy


# Most of the numerical computing stack doesn't have type annotations yet.
[mypy-affine.*]
ignore_missing_imports = True
[mypy-bottleneck.*]
ignore_missing_imports = True
[mypy-cdms2.*]
ignore_missing_imports = True
[mypy-cf_units.*]
ignore_missing_imports = True
[mypy-cfgrib.*]
ignore_missing_imports = True
[mypy-cftime.*]
ignore_missing_imports = True
[mypy-dask.*]
ignore_missing_imports = True
[mypy-distributed.*]
ignore_missing_imports = True
[mypy-h5netcdf.*]
ignore_missing_imports = True
[mypy-h5py.*]
ignore_missing_imports = True
[mypy-iris.*]
ignore_missing_imports = True
[mypy-matplotlib.*]
ignore_missing_imports = True
[mypy-Nio.*]
ignore_missing_imports = True
[mypy-nc_time_axis.*]
ignore_missing_imports = True
[mypy-numbagg.*]
ignore_missing_imports = True
[mypy-numpy.*]
ignore_missing_imports = True
[mypy-netCDF4.*]
ignore_missing_imports = True
[mypy-netcdftime.*]
ignore_missing_imports = True
[mypy-pandas.*]
ignore_missing_imports = True
[mypy-pint.*]
ignore_missing_imports = True
[mypy-PseudoNetCDF.*]
ignore_missing_imports = True
[mypy-pydap.*]
ignore_missing_imports = True
[mypy-pytest.*]
ignore_missing_imports = True
[mypy-rasterio.*]
ignore_missing_imports = True
[mypy-scipy.*]
ignore_missing_imports = True
[mypy-seaborn.*]
ignore_missing_imports = True
[mypy-sparse.*]
ignore_missing_imports = True
[mypy-toolz.*]
ignore_missing_imports = True
[mypy-zarr.*]
ignore_missing_imports = True

# setuptools is not typed
[mypy-setup]
ignore_errors = True
# versioneer code
[mypy-versioneer.*]
ignore_errors = True
# written by versioneer
[mypy-xarray._version]
ignore_errors = True
# version spanning code is hard to type annotate (and most of this module will
# be going away soon anyways)
[mypy-xarray.core.pycompat]
ignore_errors = True

[aliases]
test = pytest

[pytest-watch]
nobeep = True
