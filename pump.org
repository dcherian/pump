#+title: PUMP
#+hugo_base_dir: ./hugo/
#+hugo_section:
#+options: :eval never-export :async nil
#+property: header-args:jupyter-python :session pump

/jpy:localhost#8888:emacs

* To do                                                            :noexport:
- [-] read eq pac budget papers [2/5]
  - [ ] menkes
  - [X] ray 1
  - [X] ray 2
  - [ ] read Foltz paper
  - [ ] read Perez paper

- cruise analysis [0/3]
  - [ ] email billy about more sections
  - [ ] do cruise section not in TIW / La Nina season
  - [ ] matchup NDBC sections with JASADCP stuff
  - [ ] look at JGOFS data

- [ ] Do velocity spectra (only at equator?)
- [ ] spectra vs TAO vs SST
- [ ] filtered hovmoellerr for SST
- [ ] What are TAO locations with most data?
- [ ] freq of shred > 0?
- [ ] surface stress, net heat flux, N^2 profile
- [ ] plot differences in mean state between solutions
- [ ] Update script for heat budget runs
- [ ] composite DCL / TIW

- [X] composite like Inoue et al (2019).

- What do profiles look like with daily data?

** TIW compositing [6/22]
  - [X] use warm anomaly to reference latitude
  - [ ] could also use vorticity dipole to reference latitude
  - [X] normalize temperature also? seems weird; but subtract mean temperature
  - [ ] look at second year
  - [X] Add daily filter - maybe add apply__ufunc to xfilter?
  - [ ] need proper chunking for daily filter
  - [ ] remove depth mean prior to compositing
  - [ ] create lightweight composite class
  - [X] MLD definition
  - [X] check efficiency of MLD calculation
  - [X] implement KPP mixing depth
  - [ ] how does KPP mixing depth compare to deep cycle depth?
  - [ ] anomalize Jq

  - [ ] \bar{w'T'}

  - [ ] what is the e-folding decay scale of the mixing signal.
  - [ ] what processes lead to the upper core layer
  - [ ] calculate MLD, DCL depth and save to zarr file
  - [ ] calculate SST based TIW phase, period and save to TAO
  - [ ] calculate sections and save to zarr
  - [ ] 4 point smooth Jq in depth
  - [ ] DCL needs to be bugfixed

Method:
1. Use depth-mean v at equator to assign phase. (Inoue et al 2019)
2. change t180 profile to where SST is max?
3.

* startup                                                          :noexport:

#+NAME: startup
#+BEGIN_SRC jupyter-python :results none :exports none
%matplotlib inline

import dask
import matplotlib as mpl
import matplotlib.pyplot as plt
import numpy as np
import seawater as sw
import xarray as xr

# import hvplot.xarray

import dcpy
import pump

# import facetgrid

mpl.rcParams['savefig.dpi'] = 300
mpl.rcParams['savefig.bbox'] = 'tight'
mpl.rcParams['figure.dpi'] = 250

xr.set_options(keep_attrs=False)
#+END_SRC

#+NAME: build-cluster
#+BEGIN_SRC jupyter-python :results none
import distributed
import dask_jobqueue

if 'client' in locals():
    client.close(); cluster.close()

cluster = dask_jobqueue.SLURMCluster(
    cores=1, processes=1, memory='25GB',
    walltime='02:00:00', project='NCGD0043')

client = dask.distributed.Client(cluster)

# cluster, client = pump.utils.build_cluster()
#+END_SRC

#+NAME: scale-cluster
#+BEGIN_SRC jupyter-python :var n=2 :results output drawer
cluster.scale(n)
#+END_SRC
#+RESULTS: scale-cluster
:results:
<Client: scheduler='tcp://10.12.205.27:42720' processes=6 cores=12>
:end:

* read model runs :noexport:

#+NAME: read-gcm1-hb
#+BEGIN_SRC jupyter-python :results none
gcm1 = pump.model('pump/glade/TPOS_MITgcm_1_hb/HOLD/',
                  name='gcm1', full=False, budget=False)
#+END_SRC

#+NAME: read-gcm1
#+BEGIN_SRC jupyter-python
gcm1 = pump.model('../glade/TPOS_MITgcm_1/HOLD/',
                  name='gcm1', full=False, budget=False)
#+END_SRC

#+RESULTS: read-gcm1
#+begin_example
/glade/u/home/dcherian/pump/pump/model/model.py:54: FutureWarning: In xarray version 0.13 the default behaviour of `open_mfdataset`
will change. To retain the existing behavior, pass
combine='nested'. To use future default behavior, pass
combine='by_coords'. See
http://xarray.pydata.org/en/stable/combining.html#combining-multi

  self.dirname + '/obs_subset/annual-mean*.nc')
/gpfs/u/home/dcherian/python/xarray/xarray/backends/api.py:929: FutureWarning: The datasets supplied have global dimension coordinates. You may want
to use the new `combine_by_coords` function (or the
`combine='by_coords'` option to `open_mfdataset`) to order the datasets
before concatenation. Alternatively, to continue concatenating based
on the order the datasets are supplied in future, please use the new
`combine_nested` function (or the `combine='nested'` option to
open_mfdataset).
  from_openmfds=True,
/glade/u/home/dcherian/pump/pump/model/model.py:256: FutureWarning: In xarray version 0.13 the default behaviour of `open_mfdataset`
will change. To retain the existing behavior, pass
combine='nested'. To use future default behavior, pass
combine='by_coords'. See
http://xarray.pydata.org/en/stable/combining.html#combining-multi

  self.dirname + '/obs_subset/tao-*extract.nc')
/gpfs/u/home/dcherian/python/xarray/xarray/backends/api.py:929: FutureWarning: The datasets supplied have global dimension coordinates. You may want
to use the new `combine_by_coords` function (or the
`combine='by_coords'` option to `open_mfdataset`) to order the datasets
before concatenation. Alternatively, to continue concatenating based
on the order the datasets are supplied in future, please use the new
`combine_nested` function (or the `combine='nested'` option to
open_mfdataset).
  from_openmfds=True,
metrics files not available.
#+end_example

* NOAA CVP 2021 call
** Marginal instability as hypothesis
Overall Hypothesis: The large-scale wind and net surface fluxes acts to create a mean zonal shear S, and stratification N², such that the flow is in a state of marginal stability N²/S² ≈ 0.25 below the base of the mixed layer in the cold tongue.
Marginally stable flow is the key physics underlying the cold tongue's importance to the climate syste:
1. It keeps the cold tongue cold
2. It makes the cold tongue a site of intense ocean heat uptake

Hypothesis: The latitudinal and longitudinal extent of marginally stable flow is set by the extent of the EUC
- is the SEC wider than the EUC? if so then EUC is the control on latitudinal extent?
- bulk Ri analysis: longitudinal extent  is east of 165°E.
What sets the large-scale structure of the shear?
1. Zonal wind stress directly forces the SEC and creates a surface pressure gradient ∂P/∂x that forces the EUC.
2. Meridional Ekman mass divergence in the near-surface ocean results in a Eulerian upwelling velocity w that upwells the EUC, intensifying the mean shear, eventually to the point at which shear turbulence is triggered and KE is dissipated.

What sets the large-scale structure of the stratification?
- ???

What is the role of upwelling w?
- Eulerian upwelling of zonal momentum is key to setting the mean shear and marginally stable flow.

Split w into two: total eulerian upwelling velocity w = w_ci + w_iso; diathermal upwelling velocity w_ci ≈ (∂J/∂z) / (∂T/∂z); along-isotherm upwelling velocity w_iso = u.∇T
- Does w_iso supply other properties i.e. tracers with zonal gradients on T-surfaces to the deep-cycle zone, where they get mixed up.
- w_iso takes away the heat (and other tracers) dumped by w_ci?  

Testable hypotheses:
1. We hypothesize that we can infer total eulerian upwelling by estimating
   1. w_iso = u.∇T ≈ u∂T/∂x calculated from large-scale TPOS array combined with argo sampling
   2. w_ci = (∂J/∂z) / (∂T/∂z) which requires an estimate of ∂J/∂z potentially obtainable using χpods on a mooring.
2. The latitudinal and zonal extents of the marginally stable zone are set by large-scale circulation (i.e. SEC-EUC shear) ≈ 170°W → 90°W and 2°S→2°N.

   
Intense deep-cycle turbulence is triggered daily in marginally stable flow.
Deep-cycle turbulence cools the near surface allowing it to absorb more heat from the atmosphere, and then deposists that heat in the upper flanks of the EUC (a zone of large heat flux convergence ∂J/∂z and heating).

It is essential that we understand the dynamics of mixing and upwelling in cold tongue; and that climate models accurately represent those dynamics....








** Pathways of heat:
Where is the heat moving off the equator?

- Idealize as a two layer system. surface -> DCL Fbmax → EUC core (20°C)
  measure surface flux; densely deploy χpods around Fbmax depth; assume Fb=0 at EUC core. This gives us cooling divergence above Fbmax; heating below Fbmax.
  1. Trace heat pathways using lagrangian floats
     a. keep them in lower box above EUC as much as possible?
     b. or start in the west and have them profile up down; so they will in a loopy fashion (EUC → SEC → EUC) sampling W→E turbulence?
  2. Links up with Karnauskus stuff about EUC encountering Galapagos.
  3. Use heat flux divergence to test parmaterization performance in climate models
** Connection between surface and thermocline
Kessler et al (2005) PUMP
- The relation between SST and thermocline depth is the key parameterization in simple ENSO models, with the memory carried in thermocline depth the dominant source of oscillation.
- the oceanic vertical diffusivity is found to be a principal factor in the amplitude of their ENSO oscillations, with low background diffusivity producing a sharper thermocline and realistically more intense El Ni˜ no events

** subtropical cells
-

* gyaan

1. Maximum depth-integrated EUC transport at ≈ 135W.
2.

** Marginal instability

1. In marginally unstable systems, Ri tends to cluster around 1/4 citep:Smyth2019 : this is /scale invariance/ --- This is why the usual averaging bias in Ri estimates is not a problem at the equator citep:Pham2017. This behaviour is seen for stratified turbulence forced by a mean shear that varies slowly on the time scale of the instabilities.
2. cite:Smyth2013a grid T, ADCP on 5m grid and then differentiate. Use N2 = g α T_z.

** TIWs
- Meridional velocity seems to be a good way to define phases.

Inoue papers:
- N-S phase has strongest mixing
- S phase -> UCL (-300 W/m^2; 1e-3 m^2/s)
  - EQUIX was the first expt where microstructure measurements were taken during the S phase
  - Can models recover this?
- Turbulence appears to be proportional to Sh^2_{red}
- S-N, N phases have weakest mixing / heat flux + strongest dT/dz
- S^2 , N^2 co-vary (Inoue et al, 2012; Figure 8)

Ryan:
- Zonal shear is the main thing. Meridional shear is not so important.
-

** large-scale circulation

- advective terms intensify the EUC and SEC. Their curl is ≥ O(wind stress curl).
- Eastward advection of cyclonic relative vorticity strengthens EUC, SEC well east of 90W (galapagos). The winds are quite weak east of 90W so there should be weak circulation but there is not...
- indicating that the role of TIW advection is like a friction and acts to weaken the EUC and spread its eastward momentum to its flanks.
- EUC shoaling in March-May is forced by westward-propagating annual cycle of zonal-wind along the equator

*** Kessler et al (2003): Curl of nonlinear terms is really important

\begin{align}
        βV &= ∇ × τ \\
        U_x + V_y &= 0 \\
⇒ U &= \frac{-1}{β} ∫_{EB}^x ∂_y (∇×τ) dx + U_{EB}
\end{align}
By Sverdrup, eastern Pacific curl sets the zonal pattern. They express advection & friction as generalized stress : for advection,
\begin{equation}
        τ' = - ∫ (∇ \cdot uhu) dz
\end{equation}
#+begin_quote
When ∂_y curl(τ') is integrated westward, the advective terms are seen to have the effect of intensifying the
mean vertically integrated currents, both the eastward EUC^z and the westward SEC(N)^z and SEC(S)^z.
#+end_quote

* Data locations                                                   :noexport:

|--------+-------------------|
| ROMS   | glade/tpos20/OUT/ |
| MITgcm | glade/TPOS_MITgcm  |
| POP    | g.xxx             |
|--------+-------------------|

- heat budget output are 4 hourly snapshots
- others are daily averages

* Vertical resolution

#+NAME: 541ec1bc-e56b-4910-8b49-ad9476538313
#+BEGIN_SRC jupyter-python :session localhost:8888/pump/notebooks/validation.ipynb :results output drawer
%time gcm0 = pump.model('../glade/TPOS_MITgcm/HOLD/', 'gcm20 orig')
%time gcm1 = pump.model('../glade/TPOS_MITgcm_1/HOLD/', 'gcm20 1m')
%time gcm25 = pump.model('../glade/TPOS_MITgcm_2.5/HOLD/', 'gcm20 2.5m')
%time gcm5 = pump.model('../glade/TPOS_MITgcm_5/HOLD/', 'gcm20 5m')
%time gcm10 = pump.model('../glade/TPOS_MITgcm_10/HOLD/', 'gcm20 10m')

models = dict(zip(['gcm', '1m', '2.5m', '5m', '10m'],
                  [gcm0, gcm1, gcm25, gcm5, gcm10]))
#+END_SRC

#+RESULTS: 541ec1bc-e56b-4910-8b49-ad9476538313
:results:
---------------------------------------------------------------------------
KeyboardInterrupt                         Traceback (most recent call last)
<timed exec> in <module>

~/pump/pump/model/model.py in __init__(self, dirname, name, kind, full)
     50
     51         self.obs = obs_container()
---> 52         self.oisst = read_sst(self.domain['xyt'])
     53
     54         try:

~/pump/pump/obs.py in read_sst(domain)
     97         sst = xr.open_mfdataset(
     98             [root+'/obs/oisst/sst.day.mean.'+str(yy)+'.nc' for yy in years],
---> 99             parallel=True)
    100     else:
    101         sst = xr.open_mfdataset(root+'/obs/oisst/sst.day.mean.*.nc',

/gpfs/u/home/dcherian/python/xarray/xarray/backends/api.py in open_mfdataset(paths, chunks, concat_dim, compat, preprocess, engine, lock, data_vars, coords, autoclose, parallel, **kwargs)
    704         # calling compute here will return the datasets/file_objs lists,
    705         # the underlying datasets will still be stored as dask arrays
--> 706         datasets, file_objs = dask.compute(datasets, file_objs)
    707
    708     # Close datasets in case of a ValueError

~/miniconda3/envs/dcpy/lib/python3.6/site-packages/dask/base.py in compute(*args, **kwargs)
    396     keys = [x.__dask_keys__() for x in collections]
    397     postcomputes = [x.__dask_postcompute__() for x in collections]
--> 398     results = schedule(dsk, keys, **kwargs)
    399     return repack([f(r, *a) for r, (f, a) in zip(results, postcomputes)])
    400

~/miniconda3/envs/dcpy/lib/python3.6/site-packages/distributed/client.py in get(self, dsk, keys, restrictions, loose_restrictions, resources, sync, asynchronous, direct, retries, priority, fifo_timeout, actors, **kwargs)
   2330             try:
   2331                 results = self.gather(packed, asynchronous=asynchronous,
-> 2332                                       direct=direct)
   2333             finally:
   2334                 for f in futures.values():

~/miniconda3/envs/dcpy/lib/python3.6/site-packages/distributed/client.py in gather(self, futures, errors, maxsize, direct, asynchronous)
   1654             return self.sync(self._gather, futures, errors=errors,
   1655                              direct=direct, local_worker=local_worker,
-> 1656                              asynchronous=asynchronous)
   1657
   1658     @gen.coroutine

~/miniconda3/envs/dcpy/lib/python3.6/site-packages/distributed/client.py in sync(self, func, *args, **kwargs)
    674             return future
    675         else:
--> 676             return sync(self.loop, func, *args, **kwargs)
    677
    678     def __repr__(self):

~/miniconda3/envs/dcpy/lib/python3.6/site-packages/distributed/utils.py in sync(loop, func, *args, **kwargs)
    278     else:
    279         while not e.is_set():
--> 280             e.wait(10)
    281     if error[0]:
    282         six.reraise(*error[0])

~/miniconda3/envs/dcpy/lib/python3.6/threading.py in wait(self, timeout)
    549             signaled = self._flag
    550             if not signaled:
--> 551                 signaled = self._cond.wait(timeout)
    552             return signaled
    553

~/miniconda3/envs/dcpy/lib/python3.6/threading.py in wait(self, timeout)
    297             else:
    298                 if timeout > 0:
--> 299                     gotit = waiter.acquire(True, timeout)
    300                 else:
    301                     gotit = waiter.acquire(False)

KeyboardInterrupt:
:end:

* Validations
:PROPERTIES:
:EXPORT_FILE_NAME: validations
:EXPORT_HUGO_SECTION: validations
:END:

** Todo
- [X] Barotropic flow and slope of EUC

- [ ] Diurnal cycle

- [X] meridional profile of the EUC. How wide is it? What depth is the maximum width? This can be compared with the Johnson et al data at different longitudes.

- [ ] Meridional shear and location/strength of NECC

- [X] shear above the EUC. Are the two lobes of the westward SEC above it realistic? (Again Johnson, also the long equatorial mooring time series at 110W, 140W, 170W, 165E). The site with these is shut down now but will presumably be up again soon.

- [ ] Variability of TIWs (amplitude, lateral extent, frequency)

- [ ] the TIWs you mention will be a good test, since Frank has shown that his 0.1-degree run has much stronger TIWs than the 1-degree run. Do they get even stronger at 1/20th? Does the cold tongue front sharpen? Beyond the present project, we need to understand the role of model resolution on TIWs, since they are so fundamental to the upper heat budget. There is limited data to test this (a few short-term experiments), except SST may be useful.

- [ ] temporal variation of U, V, shear, stratification within TIW cycle in mixed layer, pycnocline, EUC core, and below at 110, 125, and 140W. Especially, compare  with observations that we have found in 2008.

** Summary

1. EUC is narrower and weaker than Johnson climatology. EUC maximum is slightly deeper (20m or so).
2.

** Turbulence

|------------------------------+---------------------------------------+-------------------------------+----------------------------|
| Diagnostic / Model           | observations                          | 1m                            | 10m                        |
|------------------------------+---------------------------------------+-------------------------------+----------------------------|
| Marginal stability at 0, 140 | Ri = 0.25,                            | Ri=0.3-0.4                    | Ri=0.3-0.4                 |
|                              | MAM: more stable (0.5-1)              | MAM: not different! (0.4-0.5) | MAM: more stable (0.5-0.6) |
|------------------------------+---------------------------------------+-------------------------------+----------------------------|
| Deep cycle layer (DCL)       | Daily cycle; seasonal cycle in depth  |                               |                            |
|------------------------------+---------------------------------------+-------------------------------+----------------------------|
| Upper core layer (UCL)       | 20 - 40m thick layer above EUC max    |                               |                            |
|                              | decoupled from DCL / surface at times |                               |                            |
|------------------------------+---------------------------------------+-------------------------------+----------------------------|
| TIW modulation               | Largest during N, N-S phases          |                               |                            |
| (not independent)             |                                       |                               |                            |
|------------------------------+---------------------------------------+-------------------------------+----------------------------|

*** Marginal (in)stability

#+CAPTION: Seasonal median Ri profiles like cite:Smyth2013a for TAO locations along the equator. This uses daily average output.
[[file:images/seasonal-Ri-tao.png]]

#+CAPTION: Compare gcm runs to TAO at (0, 140). Still biased high. The TAO estimates are with daily-averaged output.
[[file:images/Ri-all-models.png]]

*** Deep cycle

Definitions:
1. Depth of max squared shear
2. dε/dt : since DCL is a daily cycle in ε. Average εto 6h intervals and then compute dε/dt. Identify penetration of daily varying epsilon + choose greatest depth of penetration

**** Zaron & Moum

KPP defines /mixing layer/ as Ri < 0.3 which would include the deep cycle layer?

But Zaron & Moum show SBL (i.e. mixing layer depth) as being different from MLD and deep cycle?

Large & Gent: Pacanowski & Philander scheme has much higher diffusivities because they need that to get a surface mixed layer but KPP has a surface layer mixing scheme to take care of that.

**** Are the models simulating a deep cycle?
 a. 1m:

 b. 10m: Hmmm..
  #+CAPTION: Not sure if the 10m simulation actually has a deep cycle. The descending shear max  corresponds to base of the mixed layer. (c) DCL $K_T$ mean, median (d,e) Solid lines are MLD, DCL base, EUC max.
  [[file:images/maybe-dcl-10m.png]]

** SST

#+CAPTION: 1996 Monthly mean SST from OISST and MITgcm.
[[file:images/monthly-mean-sst.png]]

** Surface velocity

#+CAPTION: Monthly mean sea-surface zonal velocity. OSCAR vs MITgcm
[[file:images/monthly-mean-ssu.png]]

** EUC

#+CAPTION: Meriodional sections of the EUC in the Johnson climatology (black) and MITgcm 1/20 (gray). First 3 columns: Meriodional profile is averaged -250m to surface. 4th column: vertical profile is averaged between -3N to 3N, -250m to surface, for u > 0.
[[file:images/mitgcm-20-johnson-depth-sections.png]]


#+CAPTION: Depth-longitude sections for MITgcm 1/20 vs Johnson climatology. Slope looks good! Model EUC is slightly deeper.
[[file:images/mitgcm-20-johnson-longitude-depth-section.png]]
** NECC
** Spectra
#+CAPTION: Multitaper spectra for 100m temperature. TAO vs MITgcm 1/20.
[[file:images/validation-mitgcm20-tao-100m-temp-spectra.png]]

** TIW

#+CAPTION: Hovmoeller plots of SST anomaly from OISST (color) & MITgcm (black)
[[file:images/oisst-comparison.png]]

* Diary

** <2019-06-10 Mon>

- No luck so far with a new DCL base definition
- There seems to be large variation for each TIW "period" though composites at 110W, 125W, 140W are consistent

** <2019-05-14 Tue>

- Looking for deep cycle signal. I may or may not see it. Hard to be sure.
  [[file:images/maybe-dcl-10m.png]]

* Meetings
:PROPERTIES:
:EXPORT_FILE_NAME: meetings
:EXPORT_HUGO_SECTION: meetings
:END:

** <2019-03-20 Wed>

*** Results

- Simulation domain begins at 95W. Do we move this further east to avoid edge effects?

*** Comments
- [ ] Do vertical profile of transport instead of mean velocity.
*** Followup

* TAO
* Marginal stability
** groupby_bins
#+BEGIN_SRC jupyter-python :session py
da = xr.DataArray([[0,1],[2,3]],
                  {'lon': (['ny','nx'], [[30,40],[40,50]] ),
                   'lat': (['ny','nx'], [[10,10],[20,20]] ),},
                  dims=['ny','nx'])

grouped = da.groupby('nx')

for label, group in grouped:
    print(group)
#+END_SRC
#+CAPTION:
[[file:$1]]

** TAO daily dataset
** TAO hourly dataset
#+BEGIN_SRC jupyter-python :file images/tao-marginal-stability-hourly.png
adcp = pump.obs.read_tao_adcp(freq='hr')
temp = pump.obs.read_eq_tao_temp_hr()
Ri = pump.calc_tao_ri(adcp, temp)

eucmax = pump.get_euc_max(adcp.u)
Ri = Ri.to_dataset()
Ri['zeuc'] = Ri.depth - eucmax

seasonal = Ri.groupby('time.season')

for season, Ris in seasonal:
    Rigrouped = Ris.Ri.groupby_bins(Ris.zeuc, np.arange(0, 200, 10))
    for bin, group in Rigrouped:
        print(bin)

seasonal = (Ri
            .groupby('time.season').median('time')
            .reindex(season=['DJF', 'MAM', 'JJA', 'SON']))

fg = (seasonal.plot.line(col='longitude', hue='season', y='depth',
                         ylim=[-150, 0], xlim=[0.1, 3.5], xscale='log'))
fg.map(lambda: dcpy.plots.linex([0.25, 0.3]))
plt.gcf().suptitle('Seasonal median 5m Ri | Hourly mean TAO ADCP, T '
                   , y=1.02)
plt.gcf().set_size_inches((8, 4))
plt.gcf().set_dpi(200)
# f, ax = plt.subplots(1, 1, constrained_layout=True)
# f.savefig('images/tao-marginal-stability-hourly.png')
#+END_SRC

#+RESULTS:
[[file:images/tao-marginal-stability-hourly.png]]


Check Ri
#+BEGIN_SRC jupyter-python
V = adcp[['u', 'v']]
S2 = (V['u'].differentiate('depth')**2
      + V['v'].differentiate('depth')**2)

T = (temp
     .sel(time=V.time)
     .sortby('depth')
     .interpolate_na('depth', 'linear')
     .sortby('depth', 'descending')
     .interp(depth=V.depth))

# the calculation is sensitive to using sw.alpha! can't just do 1.7e-4
N2 = (9.81
      ,* dcpy.eos.alpha(35, T, T.depth)
      ,* T.differentiate('depth'))

N2 = N2
Ri = N2.where(N2 > 1e-7) / S2.where(S2 > 1e-10)
#+END_SRC
#+CAPTION:
[[file:images/temp/imgcsSb04.png]]

*** EUC relative depth coordinate
No luck yet.

#+BEGIN_SRC jupyter-python

def split_by_chunks(obj):
    import itertools
    chunk_slices = {}

    if isinstance(obj, xr.DataArray):
        dataset = obj._to_temp_dataset()
    else:
        dataset = obj
    for dim, chunks in dataset.chunks.items():
        slices = []
        start = 0
        for chunk in chunks:
            stop = start + chunk
            slices.append(slice(start, stop))
            start = stop
        chunk_slices[dim] = slices
    for slices in itertools.product(*chunk_slices.values()):
         selection = dict(zip(chunk_slices.keys(), slices))
         yield (selection, dataset[selection])

def reconstruct_from_chunks(template, chunks):
    dsnew = xr.zeros_like(Ri.to_array())
    for (selection, subset) in chunks:
        dsnew.loc[selection] = subset
    return dsnew


chunks = [cc for cc in split_by_chunks(Ri.chunk({'time': 10000}))]
Rinew = reconstruct_from_chunks(Ri, chunks)
xr.testing.assert_equal(Ri, Rinew)


import scipy as sp
Ri['zeuc'] = Ri.zeuc.transpose(*Ri.Ri.dims)
subset = Ri.isel(time=slice(8000, 2*8000), longitude=2)

tmat = xr.broadcast(subset.zeuc, subset.time)[1].values
Ri_binned = sp.stats.binned_statistic_2d(tmat,
                                         subset.zeuc.values,
                                         subset.Ri.values,
                                         statistic='mean',
                                         bins=np.arange(0, 200, 5))

#+END_SRC

** Simple models for MI

#+NAME: estimate-Ri-diagnosis-terms
#+BEGIN_SRC jupyter-python :results none

from pump.calc import estimate_euc_depth_terms
if 'gcm1' in locals():
    import airsea
    print('skipping gcm1, jra, ssh')
    subset = (gcm1.annual.sel(latitude=0, method='nearest')
              .assign_coords(latitude=0)
              .squeeze()
              .sel(depth=slice(0, -250)))
    subset['dens'] = pump.mdjwf.dens(subset.salt, subset.theta, subset.depth)
    subset['eucmax'] = pump.calc.get_euc_max(subset.u)

    subset = estimate_euc_depth_terms(subset)
    subset.attrs['name'] = 'gcm 1m 1996 mean'

    jra = (pump.obs.read_jra()
           .sel(latitude=0, method='nearest')
           .sel(time='1996')
           .load())
    jra['tau'] = jra.Uwind.copy(
        data=airsea.windstress.stress(np.hypot(jra.Uwind, jra.Vwind)))

    mean_jra = jra.mean('time')
    ssh = xr.open_mfdataset(pump.obs.root + 'make_TPOS_MITgcm/1996/SSH*.nc').zos

johnson = (pump.obs.read_johnson()
           .sel(latitude=0))
johnson['eucmax'] = pump.get_euc_max(johnson.u)
johnson = estimate_euc_depth_terms(johnson)
johnson.attrs['name'] = 'Johnson'

# need to fill to the surface
tao_adcp = pump.obs.read_tao_adcp().mean('time').bfill('depth')
tao_adcp['eucmax'] = pump.get_euc_max(tao_adcp.u)

tao_ctd = (pump.obs.read_tao()
           .sel(latitude=0, longitude=tao_adcp.longitude)
           .drop(['u', 'v'])
           .mean('time')
           .compute())
tao_ctd['eucmax'] = tao_adcp.eucmax
tao_ctd['dens'] = pump.mdjwf.dens(np.array(35.0), tao_ctd.temp, tao_ctd.depth)
tao_ctd_raw = tao_ctd.copy(deep=True)
tao_ctd = (tao_ctd
           .sortby('depth')
           .interpolate_na('depth')
           .sortby('depth', ascending=False)
           .bfill('depth'))

tao = xr.merge([estimate_euc_depth_terms(tao_adcp)[['us', 'ueuc', 'du', 'eucmax']],
                estimate_euc_depth_terms(tao_ctd)[['bs', 'beuc', 'db']]])
tao = estimate_euc_depth_terms(tao)
tao.attrs['name'] = 'TAO'

hires = xr.load_dataset('~/pump/glade/small-eq-mean.nc').sel(longitude=slice(-221, None))
hires['eucmax'] = (pump.calc.get_euc_max(hires.u)
                   .rolling(longitude=200, center=True, min_periods=1)
                   .mean())
hires = estimate_euc_depth_terms(hires)
#+END_SRC


1. I am averaging daily TAO mooring data over all time. Is this a good idea?

*** Fractional contributions to bulk Ri

Another way to do this is to think of Ri=0.5 or something far east (e..g. 195W in the TAO image). Given crude estimates of longitudinal changes in Δb, EUCmax depth etc. can we explain the drop in Ri to 0.25 by 17W0?

Here Δ ≡ (surface) - (EUC max); define surface as 20m depth for now (this is where sampling starts basically)
#+CAPTION: Ri estimated using hourly TAO data.
[[file:images/tao-marginal-stability-hourly.png]]

Use a bulk definition of Richardson number
#+begin_export latex
\begin{align}
Ri &= \frac{Δb h}{Δu²} \\
\log Ri &= \log Δb + \log h - 2 \log Δu \\
\frac{1}{Ri} ∂_x Ri = \frac 1h ∂_xh + \frac{1}{Δb} ∂_x Δb - 2 \frac{1}{Δu} ∂_x Δu
\end{align}
#+end_export

Let RHS =  α,
#+begin_export latex
\begin{align}
\pp{Ri}{x} &= \Ri α \\
\Ri_0 + \pp{Ri}{x} Δx &= 0.25 \\
\Ri_0 + \Ri_0 α Δx &= 0.25 \\
α &= \frac{(0.25/\Ri_0 - 1)}{Δx} \\
\end{align}
#+end_export

$\Ri_0$ is \$Ri$ at 195W = 0.5, Δx = (170W-195W) = 25° ⇒ α = -1/50° approx.

1. Johnson dataset don't show marginal stability at 0.25. So the estimates of Δu, Δb are probably wrong. But it looks like this dataset represents marginal stability at /bulk/ Ri ≅ 1.
2. And there is a big change between 200W and 140W
3. This big change is largely from Δu
4. Bulk Ri and gradient Ri are both 0.25 in the marginally stable zone if shear is linear. Otherwise there is no general relationship.

With the Johnson data, it looks like the longitudinal variation in Δu is what dominates the reduction in Ri. This is due to both an accelerating EUC and but also due to a reversal in sign of surface current starting at 195W (i.e. appearance of the SEC). They contribute roughly equally to the change in Δu.
This result is consistent with the TAO dataset.

#+BEGIN_SRC jupyter-python :file images/johnson-eq-section.png
f, ax = plt.subplots(2, 1, constrained_layout=True)
plt.sca(ax[0])
johnson.u.plot()
johnson.u.plot.contour(levels=10, colors='k', linewidths=1)
johnson.h.plot(color='w', linewidth=2, linestyle='--')

plt.sca(ax[1])
(johnson.b-johnson.beuc).plot(cbar_kwargs={'label': '$b - b_{euc}$'})
johnson.u.plot.contour(levels=10, colors='k', linewidths=1)
johnson.h.plot(color='w', linewidth=2, linestyle='--')
plt.gcf().set_size_inches(8, 8)

ax[0].set_title('Johnson mean')
#+END_SRC

#+RESULTS:
:RESULTS:
: Text(0.5, 1.0, 'Johnson mean')
[[file:images/johnson-eq-section.png]]
:END:

But is the TAO ADCP estimate good above 50m? Not much data to average in those depths.
#+BEGIN_SRC jupyter-python :file images/johnson-tao-eq-adcp.png

f, ax = plt.subplots(3, 1, constrained_layout=True,
                     sharex=True, sharey=True)

kwargs = dict(ylim=(-500, 0), vmin=-1, vmax=1, cmap=mpl.cm.RdBu_r)
tao_adcp.u.plot(ax=ax[0], y='depth', **kwargs)
johnson.u.plot(ax=ax[1], y='depth', **kwargs, cbar_kwargs={'label': 'u'})
((tao_adcp.u - johnson.u.interp(depth=tao_adcp.depth, longitude=tao_adcp.longitude))
 .plot(ax=ax[2], y='depth', ylim=kwargs['ylim']))

ax[0].set_xlabel('')
ax[1].set_xlabel('')
ax[0].set_title('TAO ADCP')
ax[1].set_title('Johnson ADCP')
ax[-1].set_title('Difference')

#+END_SRC

#+RESULTS:
:RESULTS:
: Text(0.5, 1.0, 'Difference')
[[file:images/johnson-tao-eq-adcp.png]]
:END:


**** testing discretization errors

Looks like the best way is to calculate $∂/∂x(log(a))$ instead of $1/a  ∂a/∂x$. I think it's nicer to take the derivative after log-transforming

#+BEGIN_SRC jupyter-python
xr.testing.assert_allclose(
    np.log10(johnson.Ri).differentiate('longitude'),
    (np.log10(johnson.db).differentiate('longitude')
     + np.log10(np.abs(johnson.h)).differentiate('longitude')
     - 2 * np.log10(np.abs(johnson.du)).differentiate('longitude')))

def diff(a):
    return a.diff('longitude')/a.longitude.diff('longitude')

def fraction_diff(a):
    return np.log(np.abs(a)).differentiate('longitude')

xr.testing.assert_allclose(
    fraction_diff(johnson.Ri),
    fraction_diff(johnson.h) + fraction_diff(johnson.db) - 2 * fraction_diff(johnson.du)
)

# new_Ri = johnson.Ri.copy(deep=True)
# new_Ri[0] = (new_Ri[0] + new_Ri[1])/2
# new_Ri[-1] = (new_Ri[-2] + new_Ri[-1])/2
# xr.testing.assert_allclose(
#     diff(np.log(johnson.Ri)),
#     1/new_Ri * diff(johnson.Ri)
# )
#+END_SRC

#+RESULTS:

**** Johnson dataset
#+call: estimate-Ri-diagnosis-terms()
#+NAME: Ri-diagnosis-johnson
#+BEGIN_SRC jupyter-python :file images/Ri-diagnosis-johnson.png
pump.plot.plot_bulk_Ri_diagnosis(johnson);
#+END_SRC

#+RESULTS: Ri-diagnosis-johnson
[[file:images/Ri-diagnosis-johnson.png]]

The first longitude (two in gradient) is missing because ADCP data only exist to 215m.

**** TAO

Similar result holds for TAO!

#+BEGIN_SRC jupyter-python :file images/Ri-diagnosis-tao.png
pump.plot.plot_bulk_Ri_diagnosis(tao)
#+END_SRC

#+RESULTS:
:RESULTS:
| <Figure | size | 1440x1800 | with | 7 | Axes> | (Ri : <matplotlib.axes._subplots.AxesSubplot at 0x2bacc007b780> h : <matplotlib.axes._subplots.AxesSubplot at 0x2bacc1552668> du : <matplotlib.axes._subplots.AxesSubplot at 0x2bacc157db38> db : <matplotlib.axes._subplots.AxesSubplot at 0x2bacc15ada58> u : <matplotlib.axes._subplots.AxesSubplot at 0x2bacc15e86d8> b : <matplotlib.axes._subplots.AxesSubplot at 0x2bacc161f940> contrib : <matplotlib.axes._subplots.AxesSubplot at 0x2bacc1655978>) |
[[file:images/Ri-diagnosis-tao.png]]
:END:

**** gcm1
#+BEGIN_SRC jupyter-python :file images/Ri-diagnosis-gcm1.pnga
mpl.rcParams['figure.dpi'] = 180

smooth = (subset.sel(longitude=slice(-165, -100))
          .coarsen(longitude=100).mean())
smooth.attrs = subset.attrs
f, ax = pump.plot.plot_bulk_Ri_diagnosis(smooth, None, None, lw=1)
pump.plot.plot_bulk_Ri_diagnosis(johnson, f, ax, marker='^', ls='none')
pump.plot.plot_bulk_Ri_diagnosis(tao, f, ax, marker='o', ls='none')
ax['Ri'].legend(labels=['gcm1', 'johnson', 'TAO'], ncol=3, loc='upper right')
#+END_SRC

#+RESULTS:
:RESULTS:
: <matplotlib.legend.Legend at 0x2bac00285048>
[[file:images/Ri-diagnosis-gcm1.png]]
:END:

**** Small et al 2014, CESM1 hires

Ri looks (not so) OK actually *but* Δb seems to be as important as Δu between 200 and 170.
This is because SEC is in the wrong direction?! and so shear is smaller. Sign of SEC in W.Pac. is consistent in TAO, Johnson, drifter climatology.
#+BEGIN_SRC jupyter-python
f, ax = plt.subplots(2, 1, sharex=True, sharey=True)
(annual.u.where(annual.ULONG < -5, drop=True)
.isel(depth=0)
.isel(nlon=slice(None, -50))
.plot(x='ULONG', y='ULAT', xlim=[-250, -90], ax=ax[0], vmin=-1, vmax=1, cmap=mpl.cm.RdBu_r,))

drifter.U.plot(x='longitude', vmin=-1, vmax=1, cmap=mpl.cm.RdBu_r,xlim=[-250, -90], ylim=[-6, 6])
#+END_SRC

#+RESULTS:
:RESULTS:
: <matplotlib.collections.QuadMesh at 0x2b63ea34ac8>8
[[file:./.ob-jupyter/725bfb61dbf360997dd6d31a4d0f0008dba2a463.png]]
:END:

#+BEGIN_SRC jupyter-python

#+END_SRC

#+RESULTS:
:RESULTS:
: <matplotlib.collections.QuadMesh at 0x2b63e3bf8588>
[[file:./.ob-jupyter/2356133e2fbf578a0443d2daaf2db17b14c2b5bc.png]]
:END:

#+BEGIN_SRC jupyter-python
f, ax = plt.subplots(2, 1, sharex=True, sharey=True)
plt.sca(ax[0])
johnson.us.plot(marker='^')
tao.us.plot(marker='o')
hires.us.plot()
drifter.U.sel(latitude=0, method='nearest').plot()
dcpy.plots.liney(0)

plt.sca(ax[1])
johnson.ueuc.plot(marker='^')
tao.ueuc.plot(marker='o')
hires.ueuc.plot()
dcpy.plots.liney(0)

ax[0].legend(['Johnson', 'TAO', 'CESM-Hires', 'Drifter climatology'])
ax[0].set_title('surface u')
ax[1].set_title('u EUC')
ax[0].set_xlabel('')
#+END_SRC

#+BEGIN_SRC jupyter-python
f, ax = plt.subplots(2, 2, sharex=True, sharey='col', constrained_layout=True)
plt.sca(ax[0,0])
johnson.us.plot(marker='^')
tao.us.plot(marker='o')
hires.us.plot()
drifter.U.sel(latitude=0, method='nearest').plot()
dcpy.plots.liney(0)

plt.sca(ax[1,0])
johnson.ueuc.plot(marker='^')
tao.ueuc.plot(marker='o')
hires.ueuc.plot()
dcpy.plots.liney(0)

ax[0,0].legend(['Johnson', 'TAO', 'CESM-Hires', 'Drifter climatology'])
ax[0,0].set_title('surface u')
ax[1,0].set_title('u EUC')
ax[0,0].set_xlabel('')

plt.sca(ax[0,1])
johnson.bs.plot(marker='^')
tao.bs.plot(marker='o')
hires.bs.plot()

plt.sca(ax[1,1])
johnson.beuc.plot(marker='^')
tao.beuc.plot(marker='o')
hires.beuc.plot()

#+END_SRC

#+RESULTS:
:RESULTS:
| <matplotlib.lines.Line2D | at | 0x2b63e8523b70> |
[[file:./.ob-jupyter/956d3d27bc0e069554e3cde7aeec195b0842d0a1.png]]
:END:


#+BEGIN_SRC jupyter-python :file images/Ri-diagnosis-cesm-hires.png
f, ax = pump.plot.plot_bulk_Ri_diagnosis(hires.sel(longitude=slice(None, -95, 10)),
                                         None, None, lw=1)
pump.plot.plot_bulk_Ri_diagnosis(johnson, f, ax, marker='^', ls='none')
pump.plot.plot_bulk_Ri_diagnosis(tao, f, ax, marker='o', ls='none')
ax['Ri'].legend(labels=['cesm-hires', 'johnson', 'TAO'], ncol=3, loc='upper right')

#pump.plot.plot_bulk_Ri_diagnosis(hires.sel(longitude=slice(None, -95)))
#+END_SRC

#+RESULTS:
:RESULTS:
: <matplotlib.legend.Legend at 0x2bacb06c2470>
[[file:images/Ri-diagnosis-cesm-hires.png]]
:END:

Bias is in surface velocity.
***** tuning

1. need to smooth EUC max
#+BEGIN_SRC jupyter-python
pump.calc.get_euc_max(hires.u).plot()
hires.eucmax.rolling(longitude=100, center=True).mean().plot()
#+END_SRC

#+RESULTS:
:RESULTS:
| <matplotlib.lines.Line2D | at | 0x2bacc2204828> |
[[file:./.ob-jupyter/a85bc52c50b9c7905a284cec67bfbe3396fdde88.png]]
:END:

2. Different vertical level for surface velocity doesn't change things
#+BEGIN_SRC jupyter-python
hires.u.isel(depth=slice(0, 5)).plot.line(hue='depth')
#+END_SRC

#+RESULTS:
:RESULTS:
| <matplotlib.lines.Line2D | at | 0x2bacc2dead30> | <matplotlib.lines.Line2D | at | 0x2bacc2e07828> | <matplotlib.lines.Line2D | at | 0x2bacc2e07a20> | <matplotlib.lines.Line2D | at | 0x2bacc2e07b70> | <matplotlib.lines.Line2D | at | 0x2bacc2e07cc0> |
[[file:./.ob-jupyter/656a19b70270a6028919ca988776af0bc7a5bd51.png]]
:END:

#+BEGIN_SRC jupyter-python
eucmax = pump.calc.get_euc_max(hires.u)
hires.dens.interp(depth=eucmax, longitude=eucmax.longitude).plot()
hires.dens.interp(depth=eucmax.rolling(longitude=200, center=True, min_periods=1).mean(),
                  longitude=eucmax.longitude).plot()
#+END_SRC

#+RESULTS:
:RESULTS:
| <matplotlib.lines.Line2D | at | 0x2bac658908d0> |
[[file:./.ob-jupyter/dcd4573bddfe0dd0cd75b2a44703e923cc569a4c.png]]
:END:

#+BEGIN_SRC jupyter-python
(hires.us - hires.ueuc).plot()
hires.us.plot()
(-hires.ueuc).plot()
plt.gca().legend(['du', 'us', '-ueuc'])
#+END_SRC

#+RESULTS:
:RESULTS:
: <matplotlib.legend.Legend at 0x2babf0ac68d0>
[[file:./.ob-jupyter/59bd97a95acf8501609e513fbfd7ab872d040fc6.png]]
:END:



**** CMPI5 LE
#+BEGIN_SRC jupyter-python

/glade/p/cesm/community/CESM-LE/data/CESM-CAM5-BGC-LE/ocn/proc/tseries/monthly


#+END_SRC

*** Simple model

#+begin_export latex
\begin{align}
\Ri &= \frac{2 \bar{w} h Q}{\left(-ghη_x + Δb/2 h h_x + τ_w \right)²}
\Ri/w &= \frac{10^2 10^{-8}}{\left(10×10^2×10^{-8} + 10^{-2} × 10^2 × 10^{-5} + 10^{-5}\right)²}
\end{align}
#+end_export

Here, $Q \sim Q_{net} g α / ρ_0 / c_p$


Magnitudes


**** term magnitudes

We haven't saved SSH!

#+CALL: estimate-terms()
#+BEGIN_SRC jupyter-python :file images/eq-simple-model-terms.png
def plot_eucmax(ax, subset):
    heuc = subset.eucmax.plot(ax=ax, x='longitude', color='k', lw=1, _labels=False)
    dcpy.plots.annotate_end(heuc[0], 'eucmax')

    return heuc

def plot_line(ax, da, label):
    hu = da.plot(ax=ax, x='longitude')
    dcpy.plots.annotate_end(hu[0], label)

eucmax = subset.eucmax

f, axx = plt.subplots(4, 2, sharex=True, constrained_layout=True)
ax = dict(zip(['u', 'b', 'du', 'db', 'h', 'ssh', 'Q', 'tau'], axx.flat))
# ax['Q'] = ax['tau'].twinx()

label_kwargs = dict(fmt='%.1f', colors='k', fontsize='smaller')

hu = subset.u.plot.contourf(levels=11, ax=ax['u'], y='depth',
                            cbar_kwargs={'orientation': 'horizontal'})
#ax['u'].clabel(hu, **label_kwargs)

hb = (subset.b).plot.contourf(levels=11, ax=ax['b'], y='depth',
                              cbar_kwargs={'label': 'b',
                                           'orientation': 'horizontal'})
# ax['b'].clabel(hb, **label_kwargs)
[plot_eucmax(aa, subset) for aa in [ax['u'], ax['b']]]

[plot_line(ax['du'], subset[da], label)
 for (da, label) in zip(['us', 'ueuc', 'du'],
                        ['$u_{surf}$', '$u_{euc}$', '$\Delta u$'])]

[plot_line(ax['db'], subset[da], label)
 for (da, label) in zip(['bs', 'beuc', 'db'],
                        ['$b_{surf}$', '$b_{euc}$', '$\Delta b$'])]

dcpy.plots.liney(0, ax=[ax['du'], ax['db']])

def mark_median(ax, hxmed):
    hxmed = dhdx.median()
    dcpy.plots.liney(hxmed, ax=ax)
    ax.set_yticks(ax.get_yticks() + [hxmed])

subset.eucmax.plot(ax=ax['h'])
johnson.eucmax.plot(ax=ax['h'])
tao.eucmax.plot(ax=ax['h'], marker='o')
ax['h'].set_ylabel('$h$')

ax['hx'] = ax['h'].twinx()
subset['dhdx'] = (subset.eucmax.rolling(longitude=100).mean()
                  .differentiate('longitude') / 110e3)[10:-10]
(subset.dhdx.plot(ax=ax['hx'], x='longitude'))
mark_median(ax['hx'], subset.dhdx.median())

dhdx = (johnson.eucmax.differentiate('longitude')/110e3)
(dhdx.plot(ax=ax['hx'], x='longitude'))
mark_median(ax['hx'], dhdx.median())

dhdx = (tao.eucmax.differentiate('longitude')/110e3)
(dhdx.plot(ax=ax['hx'], x='longitude', marker='o'))
mark_median(ax['hx'], dhdx.median())

ax['hx'].set_ylabel('$h_x$')

mean_ssh = (ssh.sel(latitude=0).mean('time')).load()
mean_ssh.attrs['long_name'] = 'ssh'
mean_ssh.plot(ax=ax['ssh'])

ax['sshx'] = ax['ssh'].twinx()
dsshdx = (mean_ssh.rolling(longitude=20).mean()
          .differentiate('longitude') / 110e3)[10:-10]
(dsshdx.plot(ax=ax['sshx'], x='longitude', _labels=False))
sshxmed = dsshdx.median()
dcpy.plots.liney(sshxmed, ax=ax['sshx'])
ax['sshx'].set_yticks(ax['sshx'].get_yticks() + [sshxmed])
ax['sshx'].set_ylabel('ssh$_x$')

subset.oceQnet.plot(ax=ax['Q'])

mean_jra.tau.plot(ax=ax['tau'], x='longitude')
[aa.set_title('') for aa in ax.values()]

axx[0,0].set_xlim([-230, -95])
f.suptitle('latitude=0, 1996 annual mean')
f.set_size_inches((10, 8))
#+END_SRC

#+RESULTS:
[[file:images/eq-simple-model-terms.png]]


I can simplify using medians for h_x, ssh_x but this doesn't really matter. The result is mostly sensitive to wbar.
#+BEGIN_SRC jupyter-python :file images/Ri_simple_model.png
subset['wbar'] = subset.w.sel(depth=-20, method='nearest').sel(longitude=slice(-165, -98))

etax = dsshdx.interp(longitude=subset.longitude)
tauw = mean_jra.tau.interp(longitude=subset.longitude) / 1025
Q = subset.oceQnet * 9.81 * 1.7e-4/1025/4000

subset['Ri_simple'] = 2 * (subset.wbar * np.abs(subset.eucmax) * Q
                       / (subset.h * (-9.81 * etax + subset.db/2 * subset.dhdx) + tauw)**2)

subset['Ri_supersimple'] = 2*subset.wbar.median() * np.abs(subset.eucmax) * Q
                            / (subset.h * (-9.81 * etax + subset.db/2 * subset.dhdx) + tauw)**2)

f, ax = plt.subplots(2, 1, constrained_layout=True, sharex=True)
plt.sca(ax[0])
subset.Ri.plot()
subset.Ri_simple.plot()
subset.Ri_supersimple.plot(ylim=(-2, 2))
plt.gca().legend(['Ri$_b$', 'simple model Ri', 'simple model Ri (medians)'])
ax[0].set_ylabel('')

subset.wbar.plot(ax=ax[1], label='wbar')
dcpy.plots.liney(subset.wbar.median(), ax=ax[1])

winfer = 1/(subset.Ri_simple/subset.wbar/subset.Ri)
winfer.plot(ax=ax[1], label='inferred wbar')
ax[1].set_ylabel('w')
#+END_SRC

#+RESULTS:
:RESULTS:
: Text(0, 0.5, 'w')
[[file:images/Ri_simple_model.png]]
:END:

#+BEGIN_SRC jupyter-python
limits=dict(vmin=-5e-7, vmax=5e-7, cmap=mpl.cm.RdBu_r, ylim=[-250, 0])

f, ax = plt.subplots(3, 1, constrained_layout=True, sharex=True, sharey=True)
(subset.u.differentiate('longitude')/110e3).plot(
    ax=ax[0], **limits, add_colorbar=False)

(gcm1.annual.v.differentiate('latitude')/110e3).sel(latitude=0, method='nearest').plot(
    ax=ax[1], **limits, add_colorbar=False)

(-1*subset.w.differentiate('depth')).plot(
    ax=ax[2], **limits, cbar_kwargs=dict(orientation='horizontal'))

[plot_eucmax(aa, subset) for aa in ax]
[aa.set_title('') for aa in ax[1:]]
[aa.set_xlabel('') for aa in ax[:-1]]
#+END_SRC
#+RESULTS:
:RESULTS:
| Text | (0.5 0 ) | Text | (0.5 0 ) |
[[file:./.ob-jupyter/d24f4d57382966c72d47eadb7d817edffa521c5d.png]]
:END:

#+BEGIN_SRC jupyter-python
johnson.u.plot(y='depth')
johnson.eucmax.plot(color='k')
#+END_SRC

#+RESULTS:
:RESULTS:
| <matplotlib.lines.Line2D | at | 0x2af69e8b15c0> |
[[file:./.ob-jupyter/41d85dc5e7e3f620c92e7a0e32dfb1d2cdc839ae.png]]
:END:

**** attempt 2

* Upper Core Layer

- seems to be approx constant $u_z$
-

** An example

#+NAME: extract-ucl
#+BEGIN_SRC jupyter-python :results none
if 'gcm1' not in locals():
    gcm1 = pump.model('/glade/p/nsc/ncgd0043/TPOS_MITgcm_1_hb/HOLD/',
                      name='gcm1', full=True)

extract = (gcm1.full.sel(time=slice('1995-11-15', '1995-12-10'),
                         depth=slice(0, -200),
                         latitude=slice(-3, 3),
                         longitude=slice(-150, -130)))

extract.load()
#+END_SRC

#+BEGIN_SRC jupyter-python :file images/ucl-example.png :results none
%matplotlib inline

# extract = subset.where(subset.period == 5, drop=True).sel(depth=slice(-40, -150))
region = dict(time='1995-11-22 00:00', longitude=-140, method='nearest')

f, ax = plt.subplots(1, 3, sharex=True, sharey=True, constrained_layout=True)

for aa, vv in zip(ax, ['theta', 'v', 'u']):
    ((extract.salt
      .sel(**region))
      .plot(ax=aa, y='depth', cmap=mpl.cm.RdYlBu_r, robust=True,
            cbar_kwargs={'orientation': 'horizontal', 'aspect': 20}))

    (extract[vv].sel(**region)
     .plot.contour(ax=aa, levels=22, add_labels=False, y='depth', colors='k', linewidths=0.4))

    title = aa.get_title()
    aa.set_title(f'salt [color] & {vv} [contours]')
    aa.set_ylim([-180, 0])

f.suptitle(title, y=1.05)
f.set_size_inches((10, 5))
#+END_SRC
#+CAPTION:
[[file:imags/ucl-example.png]]

** PV calculation

#+BEGIN_SRC jupyter-python
# ds = gcm1.full
def pv(ds):
    ds['b'] = ds.dens * -9.81/1025
    ds['b'].attrs['long_name'] = '$b$'
    ds['b'].attrs['description'] = 'buoyancy'

    f = 2*(np.pi/86400)  * np.sin(ds.latitude * np.pi/180)
    zeta = ds.v.differentiate('longitude') - ds.u.differentiate('latitude')
    q = ((f + zeta) * ds.b.differentiate('depth')
         - ds.v.differentiate('depth') * ds.b.differentiate('longitude')
         + ds.u.differentiate('depth') * ds.b.differentiate('latitude'))

    return q

# f, ax = plt.subplots1, 1, constrained_layout=True
#+END_SRC
#+CAPTION:
file:$1

* TIW compositing

** surface 2D field compositing

1. 110W seems like a nice place!
2. Looks like setting t=0 at phase=-180, might be a good idea

*** Method
1. Average  v between 10 and 80m at equator, filter with 10 day lowpass and use peaks and troughs to determine phase.
2. At phase=180, determine yref as 0 at maximum warm anomaly; -1, +1 at the north & south cold fronts.
3.

Is the time definition good?

** 1D compositing
*** periods: 110
#+BEGIN_SRC jupyter-python
gcm1.summarize_tiw_periods(gcm1.tao.sel(latitude=0, longitude=-110))
tasks = gcm1.summarize_tiw_periods(gcm1.tao.sel(latitude=0, longitude=-140))
#+END_SRC

#+RESULTS:
:RESULTS:
#+begin_example


  0%|          | 0/14 [00:00<?, ?it/s][A[A

  7%|▋         | 1/14 [00:05<01:05,  5.01s/it][A[A

 14%|█▍        | 2/14 [00:09<00:59,  4.93s/it][A[A

 21%|██▏       | 3/14 [00:14<00:55,  5.00s/it][A[A

 29%|██▊       | 4/14 [00:19<00:49,  4.97s/it][A[A

 36%|███▌      | 5/14 [00:24<00:44,  4.89s/it][A[A

 43%|████▎     | 6/14 [00:29<00:38,  4.82s/it][A[A

 50%|█████     | 7/14 [00:34<00:33,  4.83s/it][A[A

 57%|█████▋    | 8/14 [00:39<00:29,  4.91s/it][A[A

 64%|██████▍   | 9/14 [00:43<00:24,  4.87s/it][A[A

 71%|███████▏  | 10/14 [00:49<00:19,  4.98s/it][A[A

 79%|███████▊  | 11/14 [00:54<00:15,  5.07s/it][A[A

 86%|████████▌ | 12/14 [00:59<00:10,  5.18s/it][A[A

 93%|█████████▎| 13/14 [01:05<00:05,  5.42s/it][A[A

100%|██████████| 14/14 [01:11<00:00,  5.40s/it][A[A
#+end_example
[[file:./.ob-jupyter/00a77a0bc2a7899f1f2053e4c05b6c29dd9d7e1c.png]]
[[file:./.ob-jupyter/1853d20004d583b06259183875083063fcdb8d91.png]]
[[file:./.ob-jupyter/7a71397153fd7b54f04da6a15fd55bcbdcedf8c4.png]]
[[file:./.ob-jupyter/6368e8853f4c05da95367ac64a6eedc384269dc6.png]]
[[file:./.ob-jupyter/37f7fda4a83532e2b206f6c2626f0d4558b47ce6.png]]
[[file:./.ob-jupyter/902d0e5b9186795a8120be1f90b6b7ef91922462.png]]
[[file:./.ob-jupyter/7b61045eafbcab026115f47c01d96483b5d148d1.png]]
[[file:./.ob-jupyter/73cdc4e3284ba166d6be33b943cf5211fd2cf18e.png]]
[[file:./.ob-jupyter/1f783c046545f95f456c1c32fcc9d5dcfb6f7436.png]]
[[file:./.ob-jupyter/554d7e90d239acbb71033bbca4bd12095fb389a8.png]]
[[file:./.ob-jupyter/f5514b7659d2100bf6bb4559e99cdf0f978e6b6b.png]]
[[file:./.ob-jupyter/68315a074b60d44725c99744d4f8afa6bf496c34.png]]
[[file:./.ob-jupyter/08df0ae914c34e49466443a85721db06826544ca.png]]
[[file:./.ob-jupyter/274dc856fe7428d72bcd95c3040c71264b952ecb.png]]
:END:

*** periods: 140

#+BEGIN_SRC jupyter-python
tao140 = gcm1.tao.sel(latitude=0, longitude=-140)
tao140 = xr.merge([tao140, pump.calc.get_tiw_phase(tao140.v)])
tao140['sst'] = (gcm1.surface.theta.sel(latitude=tao140.latitude.values,
                                        longitude=tao140.longitude.values,
                                        method='nearest')
                 .rename({'latitude': 'sst_lat'}))
gcm1.summarize_tiw_periods(tao140)
#+END_SRC

* MLD calculation

#+BEGIN_SRC jupyter-python :results none
gcm5 = pump.model('../glade/TPOS_MITgcm_5/HOLD/',
                  name='gcm5', full=True, budget=False)
gcm5.full = gcm5.full.chunk({'depth': 68, 'latitude': 240, 'longitude': 500}) # 12MB chunks
#+END_SRC

#+BEGIN_SRC jupyter-python
old_index = gcm5.full.indexes['time']

new_index = old_index.copy()
new_index.freq = pd.tseries.frequencies.to_offset(
    pd.infer_freq(gcm5.full.indexes['time']))

gcm5.full = gcm5.full.reindex(time=new_index)
#+END_SRC

#+RESULTS:

#+BEGIN_SRC jupyter-python
gcm25 = pump.model('../glade/TPOS_MITgcm_2.5/HOLD/',
                   name='gcm2.5', full=True, budget=False)
gcm25.full = (gcm25.full
              .chunk({'depth': 100, 'latitude': 120, 'longitude': 500})) # 12MB chunks
#+END_SRC

#+BEGIN_SRC jupyter-python
import pump.mdjwf
# gcm25.full = gcm25.full.chunk({'depth': 100, 'latitude': 240, 'longitude': 500}) # 12MB chunks
model = gcm5
subset = model.full.sel(depth=slice(0, -240))
# dens = dcpy.eos.dens(subset.salt, subset.theta, subset.depth)
dens = pump.mdjwf.dens(subset.salt, subset.theta, subset.depth)
mld = pump.get_mld(dens)
#+END_SRC

#+RESULTS:

#+BEGIN_SRC jupyter-python :file images/temp/mld-test.png
%matplotlib inline

f, ax = plt.subplots(1, 1, constrained_layout=True)
region = dict(latitude=0, longitude=-140, method='nearest')
itime = 100
subset2 = subset.isel(time=itime).sel(**region)
dens.isel(time=itime).sel(**region).plot(ax=ax, y='depth')
dcpy.plots.liney(mld.isel(time=itime).sel(**region))
# f.savefig('..//images/mld-test.png')
#+END_SRC

#+RESULTS:
[[file:images/temp/mld-test.png]]

* EQUIX analysis

#+NAME: read-equix
#+BEGIN_SRC jupyter-python :results none
import dcpy.util
import dcpy.oceans
import numpy as np
import pandas as pd
import xarray as xr

from scipy.io import loadmat

import platform

if platform.uname().node == 'darya':
    dirname = 'obs/equix/'
else:
    dirname = '/glade/u/home/dcherian/pump/glade/obs/equix/'


adcpmat = loadmat(dirname + '03UP_10min_mag_corrected.mat')

adcp = xr.Dataset()
adcp['depth'] = xr.DataArray(adcpmat['Zgrid'].squeeze(),
                             dims=['depth'])
adcp['time'] = xr.DataArray(
    dcpy.util.datenum2datetime(adcpmat['jday_gmt'].squeeze()),
    dims=['time'],
    attrs={'timezone': 'GMT'})

adcp['u'] = (('depth', 'time'), adcpmat['Ug'])
adcp['v'] = (('depth', 'time'), adcpmat['Vg'])
adcp['w'] = (('depth', 'time'), adcpmat['Wg'])
adcp.attrs['declination'] = adcpmat['magdeclination'].squeeze()

ctdmat = loadmat(dirname + 'sbe37_eq08_10min.mat')
ctd = xr.Dataset()
ctd['depth'] = (('depth'), ctdmat['zgrid'].squeeze())
ctd['time'] = (('time'),
               dcpy.util.datenum2datetime(
                   ctdmat['Jday_gmt'].squeeze()))
ctd['T'] = (('depth', 'time'), ctdmat['T_tgrid_zgrid'])
ctd['S'] = (('depth', 'time'), np.real(ctdmat['S_tgrid_zgrid']))
ctd['C'] = (('depth', 'time'), ctdmat['C_tgrid_zgrid'])
ctd['dens'] = (('depth', 'time'), ctdmat['pden_tgrid_zgrid'])
ctd['dens'] = np.real(ctd.dens)

ctd = ctd.sel(time=slice('2008-10-24 06:30', '2008-11-04 17:50'))
adcp = adcp.sel(time=slice('2008-10-24 06:30', '2008-11-04 17:50'))

ctd['time'] = ctd.time.dt.round('min')
adcp['time'] = adcp.time.dt.round('min')

ctd['depth'] = ctd.depth * -1
adcp = adcp.sortby('depth', ascending=False)
ctd = ctd.sortby('depth', ascending=False)

adcp['speed'] = np.hypot(adcp.u, adcp.v)
import pump
adcp['t90'] = pd.to_datetime('2008-Oct-29 22:15')
xr.testing.assert_equal(ctd.time, adcp.time)
#+END_SRC

#+CALL: read-equix()
#+BEGIN_SRC jupyter-python :session py
def plot_2dspectrum(da, ax=None, dim=None, linthreshx=0.1, linscalex=0.05,
                    linthreshy=1e-3, linscaley=0.01, diff=None, **kwargs):

    from xrft import xrft

    if ax is None:
        ax = plt.gca()

    spec = xrft.power_spectrum(da, dim=dim, detrend='constant', window=True,
                               density=True)

    if diff:
        spec = (2*np.pi * spec['freq_' + dim[0]])**2 * spec
        spec = spec.where(spec > 0)

    spec.plot(norm=mpl.colors.LogNorm(), ax=ax, robust=True, **kwargs)

    # ax.set_yscale('symlog', linthreshy=linthreshy, linscaley=linscaley)
    # ax.set_xscale('symlog', linthreshx=linthreshx, linscalex=linscalex)


f, ax = plt.subplots(1, 1, constrained_layout=True)

plot_2dspectrum(adcp.u.sel(depth=slice(-50, -20)), dim=['depth'], diff=True)
f.savefig('images/temp/imgHqJpjd.png')
#+END_SRC

#+RESULTS:

#+CAPTION:
[[file:images/temp/imgHqJpjd.png]]


#+BEGIN_SRC jupyter-python :session py
adcp = adcp.dropna('depth', how='any')
adcp['shear'] = adcp.u.differentiate('depth') + 1j * adcp.v.differentiate('depth')
spec = xrft.power_spectrum(adcp.shear, dim=['depth'], density=True, detrend='linear', window=True)

plt.figure)(git
(spec.coarsen(dict(freq_time=5, freq_depth=4), boundary='trim')
 .mean().plot(norm=mpl.colors.LogNorm(), robust=True, cmap=mpl.cm.Reds))
# f, ax = plt.subplots(1, 1, constrained_layout=True)

# f.savefig('images/temp/imgeoNH8r.png')
#+END_SRC
#+CAPTION:
[[file:images/temp/imgeoNH8r.png]]


** Bulk Ri

Hmmm... T sensors are limited to 10m. Though cite:Inoue2012 say there's an upward looking ADCP at 600m.

I think I'll choose 20 and 80m.

The current dataset has only CTDs which were only deployed in top 52.5m. Need to ask for T sensors that were deployed below that depth (up to 90m).

#+BEGIN_SRC jupyter-python
adcp.u.plot()
#+END_SRC

#+RESULTS:
:RESULTS:
: <matplotlib.collections.QuadMesh at 0x2b8b738517b8>
[[file:./.ob-jupyter/21d8c4e1e3324aa3fc05e10a4996805fb2ab744e.png]]
:END:

#+BEGIN_SRC jupyter-python
equix = xr.Dataset()
ctd['b'] = (ctd.dens-1025) * -9.81/1025
equix['h'] = -45
equix['bs'] = ctd.b.sel(depth=-20, method='nearest')
equix['beuc'] = ctd.b.sel(depth=equix.h, method='nearest')
equix['db'] = equix.bs - equix.beuc
equix['us'] = adcp.u.sel(depth=-20, method='nearest')
equix['ueuc'] = adcp.u.sel(depth=equix.h, method='nearest')
equix['du'] = equix.us - equix.ueuc

equix['Rib'] = np.abs(equix.h) * equix.db / equix.du**2

ctd['N2'] = -9.81/1025 * ctd.dens.differentiate('depth')
equix['Rig'] = ctd.N2.where(ctd.N2 > 1e-6)/adcp.speed.differentiate('depth')**2

equix.Rib.plot(label='Ri$_b$')
equix.Rig.mean('depth').plot(label='Ri$_g$', yscale='log')
dcpy.plots.liney(0.25)
#+END_SRC

#+RESULTS:
[[file:./.ob-jupyter/775f33c264b4dfa0fc9463bca1325f9f9af1b589.png]]

#+BEGIN_SRC jupyter-python
ctd.T.plot()
#+END_SRC

#+RESULTS:
:RESULTS:
: <matplotlib.collections.QuadMesh at 0x2b8b71792c18>
[[file:./.ob-jupyter/f5a59b8b03a01264135f110f14818233638dff60.png]]
:END:

#+BEGIN_SRC jupyter-python
f, ax = plt.subplots(2, 1, constrained_layout=True, sharex=True)

shred2 = (adcp.speed.differentiate('depth').interp(depth=ctd.depth)**2 - 4*ctd.N2)
shred2.attrs['long_name'] = '$S² - 4N²$'
(shred2
 .sel(depth=slice(0, -48))
 .plot(x='time', robust=True, ax=ax[0]))
adcp.v.plot(ax=ax[1])
#+END_SRC

#+RESULTS:
:RESULTS:
: <matplotlib.collections.QuadMesh at 0x2b8b7621a080>
[[file:./.ob-jupyter/14759971e1eaf941ffe07ae80434e3c216266f20.png]]
:END:

* read POP

#+BEGIN_SRC jupyter-python
pth = '/glade/scratch/altuntas/archive/g.e20.G.TL319_t13.control.001_hfreq/ocn/hist/mavg/'
fls = 'g.e20.G.TL319_t13.control.001_hfreq.pop.h.00'

years = range(33,53)
offset = 1957
months = [str(xx).zfill(2) for xx in range(1,13,1)]

files = []
for y in years:
    for m in months:
        files.append(pth + fls + str(y) + '-' + m + '.nc')
#+END_SRC

#+BEGIN_SRC jupyter-python
def read_pop(files):
    def preprocess(ds):
        return ds[['VVEL', 'TEMP']].reset_coords(drop=True)

    ds = xr.open_mfdataset(files, parallel=True, preprocess=preprocess)
    file0 = xr.open_dataset(files[0])
    ds.update(file0[['TLONG', 'TLAT', 'ULONG', 'ULAT']])
    file0.close()

    return ds
#+END_SRC

* johnson
#+BEGIN_SRC jupyter-python :session py
import pump

johnson = pump.obs.read_johnson('~/datasets/johnson-eq-pac-mean-adcp.cdf')
johnson['b'] = (-9.81/1025) * johnson.rho

lat = 0
f, ax = plt.subplots(2, 1, constrained_layout=True)

johnson.u.sel(latitude=lat).plot.contourf(ax=ax[0], cmap=mpl.cm.RdBu_r, levels=20)
hc = johnson.rho.sel(latitude=lat).plot.contour(ax=ax[0], colors='k', levels=11)
ax[0].clabel(hc, fmt='%.1f')

N2 = johnson.b.differentiate('depth')
N2.attrs['long_name'] = '$N^2$'
N2.sel(latitude=lat).plot.contourf(ax=ax[1], cmap=mpl.cm.Blues, levels=20, vmin=0)
johnson.u.sel(latitude=lat).plot.contour(ax=ax[1], levels=10, colors='k')

f, ax = plt.subplots(3, 1, constrained_layout=True)
(johnson.u
 .sel(latitude=0)
 .differentiate('depth')
 .plot.contourf(ax=ax[0], robust=True, levels=12,
                cbar_kwargs=dict(label='$u_z$')))

(johnson.b
 .differentiate('latitude')
 .sel(latitude=0)
 .plot.contourf(ax=ax[1], robust=True, levels=12, cbar_kwargs=dict(label='$b_y$')))

(johnson.b
 .differentiate('longitude')
 .sel(latitude=0)
 .plot.contourf(ax=ax[2], robust=True, levels=12, cbar_kwargs=dict(label='$b_x$')))
#+END_SRC

* reading CESM output: annual means
** Small et al 2014
#+BEGIN_SRC jupyter-python
small.TLONG.plot()
#+END_SRC

#+RESULTS:
:RESULTS:
: <matplotlib.collections.QuadMesh at 0x2bac37c76be0>
[[file:./.ob-jupyter/c0ccbee2aabf881b5cf4d9de3d366def0bb5085d.png]]
:END:


#+BEGIN_SRC jupyter-python
small = pump.cesm.read_small()
annual = small.mean('time').compute()
annual['dens'] = pump.mdjwf.dens(annual.salt, annual.temp, annual.depth)
annual.attrs['name'] = 'hires CESM1'
annual.to_netcdf('~/pump/glade/small-pac-mean.nc')

eq = annual.isel(nlat=62).rename(nlon='longitude')
eq['longitude'] = eq.ULONG
eq.to_netcdf('~/pump/glade/small-eq-mean.nc')

#+END_SRC

#+RESULTS:
:RESULTS:
# [goto error]
#+begin_example
---------------------------------------------------------------------------
NameError                                 Traceback (most recent call last)
<ipython-input-328-f453befc0892> in <module>
----> 1 small = pump.cesm.read_small()
      2 annual = small.mean('time').compute()
      3 annual['dens'] = pump.mdjwf.dens(annual.salt, annual.temp, annual.depth)
      4 annual.attrs['name'] = 'hires CESM1'
      5 annual.to_netcdf('pump/glade/small-annual-mean.nc')

~/pump/pump/cesm.py in read_small()
     39 def read_small():
     40     return read_cesm(
---> 41         "/glade/p/cesm/community/ASD-HIGH-RES-CESM1/hybrid_v5_rel04_BC5_ne120_t12_pop62/"
     42         "ocn/proc/tseries/monthly"
     43     )

~/pump/pump/cesm.py in read_cesm(dirname)
      5               chunks={'z_t': 7, 'nlat': 200, 'nlon': 1200})
      6
----> 7     u = xr.open_mfdataset(dirname + '/*UVEL.*', **kwargs)
      8     T = xr.open_mfdataset(dirname + '/*TEMP.*', **kwargs)
      9     S = xr.open_mfdataset(dirname + '/*SALT.*', **kwargs)

NameError: name 'xr' is not defined
#+end_example
:END:

#+BEGIN_SRC jupyter-python
small.TLAT.isel().plot()
#+END_SRC

#+RESULTS:
:RESULTS:
: <matplotlib.collections.QuadMesh at 0x2baccd6afc88>
[[file:./.ob-jupyter/f733f8df14687041e956eebec714e5e100277fbd.png]]
:END:

** CESM LE
#+BEGIN_SRC jupyter-python
le = pump.cesm.read_cesm_le()
annual = le.mean('time').compute()
annual['dens'] = pump.mdjwf.dens(annual.salt, annual.temp, annual.depth)
annual.attrs['name'] = 'CESM LE'
annual.to_netcdf('pump/glade/cesm-le-mean.nc')
#+END_SRC

* paper outline
** Observations

#+CAPTION: Marginal stability in the TAO data.
[[file:images/tao-marginal-stability-hourly.png]]

#+CAPTION: Longitudinal transition to marginal stability in the eastern equatorial Pacific in three datasets (Johnson, TAO, CESM-H).
[[file:images/Ri-diagnosis-cesm-hires.png]]

** Model biases
* off-eq DCL behind TIW: cruise observations
** data sources
*** sadcp
- Full inventory with hires data: https://www.nodc.noaa.gov/gocd/jasadcp/hr_access.html
- Ron brown: https://currents.soest.hawaii.edu/ron_brown/
- other ships: https://www.nodc.noaa.gov/woce/woce_v3/wocedata_1/sadcp/htmfiles/datamang/ship.htm
- http://ilikai.soest.hawaii.edu/sadcp/main_inv.html
- (old version) https://www.nodc.noaa.gov/woce/woce_v3/wocedata_1/sadcp/invntory/total.htm
- +full+ decimated subset JASADCP data: ftp://ftp.soest.hawaii.edu/caldwell/adcp/DATABASE/
  1. I replace http:// → ftp://
  2. ~v3.nc~ instead of ~.html~
  3. Use this emacs regexp to insert directories:
    #+begin_src emacs-lisp
    (while (re-search-forward "\\([0-9]+\\)v3" nil t)
    (replace-match "\\1/\\1" nil nil nil 1))
    #+end_src emacs-lisp

*** CTD sections
https://www.nodc.noaa.gov/ocads/oceans/RepeatSections/index.html

2007 onward: https://dods.ndbc.noaa.gov/thredds/catalog/data/tao-ctd/catalog.html
cruise reports 2007 onward>: https://tao.ndbc.noaa.gov/refreshed/taoCruiseInfo.php?hist=true
before 2007: https://tao.ndbc.noaa.gov/tao/kaimi/ctd/ctd_ndbc.shtml
Interface to above: https://tao.ndbc.noaa.gov/refreshed/ctd_delivery.php

Ka'imimoana: https://cchdo.ucsd.edu/search?q=KA%27IMIMOANA
more ADCP: https://www.nodc.noaa.gov/woce/woce_v3/wocedata_1/sadcp/invntory/kaimoana.htm
** 110W (PR16 / P18)
*** LADCP
Not sure these are much better since they are also being binned in 8m / 10m bins AFAICT .e.g https://currents.soest.hawaii.edu/clivar/ladcp/P18_1/table0.html

R.C. & Ryan think that SADCP is a better choice for finer-scale shear. LADCP needs a bunch of smoothing because of the CTD cage motion. Also, LADCP's real strength is full depth velocity.

*** SADCP
**** P18
1. [X] 33RO20071215 | 2007-12-26 - 20017-12-31 | RB-07-11 | 01601
https://currents.soest.hawaii.edu/clivar_co2/nc_table.html#rb0711_data
https://currents.soest.hawaii.edu/clivar_co2/year2007.html#rb0711
ftp://ftp.nodc.noaa.gov/nodc/archive/arc0025/0049878/3.3/data/0-data/codas/01079/
https://currents.soest.hawaii.edu/clivar/ladcp/P18_1/
https://currents.soest.hawaii.edu/clivar/ladcp/P18_1/CLIVAR_P18.nc
1. [X] 33RO20161119 | RB1606 | SACID 02292
ftp://ftp.soest.hawaii.edu/caldwell/adcp/DATABASE/02292/02292v3.nc
https://currents.soest.hawaii.edu/clivar_co2/year2016.html#rb1606_leg1
https://currents.soest.hawaii.edu/clivar_co2/adcp_nc/rb1606_leg1_os75bb.nc
https://currents.soest.hawaii.edu/go-ship/ladcp/2017_P18.html
https://currents.soest.hawaii.edu/go-ship/ladcp/_downloads/processed_uv_netcdf_20170329.tgz
**** PR16
1. [X] 33RB200311_1: 2003-11-09 : 2003-11-14 | RB0309, GP6-03-RB
   ftp://ftp.soest.hawaii.edu/caldwell/adcp/DATABASE/01032/01032v3.nc
2. [X] 33RB200411_1: 2004-11-16 : 2004-11-21 -RB0410 GP604
    ftp://ftp.soest.hawaii.edu/caldwell/adcp/DATABASE/00899/00899v3.nc
3. [ ] 31DSEP390_2: 1990-11-27 : 1990-12-03 (*WHERE IS THIS*)
4. [ ] (maybe) 33RBGP700_1: 2000-10-24 : 2000-10-29 (*DATA LOST?!*)
5. [X] 31DSEP391_1 : 1991-10-26 : 1991-10-31
   https://www.nodc.noeaa.gov/woce/woce_v3/wocedata_1/sadcp/database/00299.htm
   https://www.nodc.noaa.gov/woce/woce_v3/wocedata_1/sadcp/database/00299/00299v3.nc
6. [X] 33RBGP801_1: 2001-11-09 : 2001-11-15 | RB0109 GP6-01-RB
   - ftp://ftp.soest.hawaii.edu/caldwell/adcp/DATABASE/01007/01007v3.nc
7. [X] *** (maybe) 31DSEP692_2: 1992-11-02 : 1992-11-08
   https://www.nodc.noaa.gov/woce/woce_v3/wocedata_1/sadcp/database/00295.htm
   https://www.nodc.noaa.gov/woce/woce_v3/wocedata_1/sadcp/database/00295/00295v3.nc
8. [X] (maybe) 33RBGP602_1 : 2002-10-28 : 2002-11-01
   ftp://ftp.soest.hawaii.edu/caldwell/adcp/DATABASE/00995/00995v3.nc
9. [X] *** 31DSEP393_1 : 1993-09-10 : 1993-09-13
   https://www.nodc.noaa.gov/woce/woce_v3/wocedata_1/sadcp/database/00210.htm
   https://www.nodc.noaa.gov/woce/woce_v3/wocedata_1/sadcp/database/00210/00210v3.nc

** process "short" ADCP files
#+BEGIN_SRC jupyter-python
import xarray as xr

adcp = xr.load_dataset("datasets/adcp/31DSEP393_1_00210_short.nc")
adcp2 = xr.load_dataset("datasets/adcp/decimated/31DSEP393_1_00210v3.nc")

xr.testing.assert_allclose(
    adcp.depth.diff("time"), xr.zeros_like(adcp.depth.diff("time"))
)

adcp["depth_cell"] = adcp.depth.isel(time=0)
adcp = adcp.drop_vars("depth").rename({"depth_cell": "depth"})

adcp["spd"] = np.hypot(adcp.uship, adcp.vship)

spd2 = np.hypot(adcp2.ship_u, adcp2.ship_v)

ctd = xr.open_mfdataset("datasets/ctd/28_pr16_h_nc_ctd/*.nc", combine="nested", concat_dim="time")

#for tt in ctd.time.values:
dt = np.timedelta64(3, "h")
subctd = ctd.sel(time=tt).isel(latitude=14)
subadcp = adcp.sel(time=slice(tt-dt, tt+dt))
mask = (np.abs(adcp.lat - subctd.latitude.values) < 0.05) & (adcp.spd < 1)
masked = subadcp.where(mask, drop=True)


#+END_SRC

#+BEGIN_SRC jupyter-python
import matplotlib.pyplot as plt
f, ax = plt.subplots(2, 1, sharex=True)
spd.plot(ax=ax[0])
spd2.plot(ax=ax[0])

#adcp.lon.plot(ax=ax[1])
#ax[1].plot(ctd.time, ctd.longitude)

adcp.lat.plot(ax=ax[1])
ax[1].plot(ctd.time, ctd.latitude)

dcpy.plots.linex(ctd.time, ax=ax)
#+END_SRC

#+RESULTS:

** 140W JGOFS
ADCP: http://uhslc.soest.hawaii.edu/sadcp/DATABASE/00348.html
CTD: http://usjgofs.whoi.edu/jg/serv/jgofs/merged_objects/US_JGOFS/Equatorial_Pacific/ctd_eqpac.html1?cruise_id%20eq%20TT-011

** siphon tao ctd sections from ndbc

- this should be in ~intake_thredds~ somehow
#+BEGIN_SRC jupyter-python
from siphon.catalog import TDSCatalog

import os
import tqdm
import xarray

base_dir = "datasets/tao-ctd/"
base_url = "https://dods.ndbc.noaa.gov/thredds/catalog/tao-ctd/"
base_catalog = TDSCatalog(f"{base_url}/catalog.xml")
# each cruises is a sub-catalog ... looks like a "folder"
cruises = base_catalog.catalog_refs

for cruise in cruises:
    cruise_dir = f"{base_dir}/{cruise}"
    try:
        os.mkdir(cruise_dir)
    except FileExistsError:
        pass
    cruise_cat = TDSCatalog(f"{base_url}/{cruise}/catalog.xml")
    for ds in tqdm.tqdm(cruise_cat.datasets):
        cruise_cat.datasets[ds].download(f"{cruise_dir}/{ds}.nc")
#+END_SRC

#+RESULTS:

* Moum (2009) MUR SST
#+BEGIN_SRC jupyter-python
import xarray as xr
import matplotlib as mpl
import matplotlib.pyplot as plt

ds = xr.open_mfdataset("/home/deepak/work/pump/datasets/mur/2008*.nc")


f, ax = plt.subplots(1,1,constrained_layout=True)
(ds.analysed_sst-273).sel(time=slice("2008-10-25", "2008-11-09 00:00"), lon=-140, lat=slice(-3, 8)).plot(x="time", cmap=mpl.cm.RdYlBu_r, robust=True, vmin=25, add_labels=False, ax=ax, add_colorbar=True, cbar_kwargs={"aspect": 50})
f.set_size_inches((8, 1.5))
ax.set_xticks([])
f.savefig("images/moum-2009-sst.png", bbox_inches="tight")
#+END_SRC

* argo MLD
#+BEGIN_SRC jupyter-python
import dcpy

mld = dcpy.oceans.argo_mld_clim()
#+END_SRC

#+BEGIN_SRC jupyter-python
%matplotlib qt

mld.mlpd_da.sel(lon=slice(-170, -95), lat=slice(-2, 8)).plot(col="month", col_wrap=4, robust=True)
#+END_SRC

* shear evolution equations
#+begin_export latex
\begin{align*}
D_t u_z = u_z v_y + (f - u_y) v_z - b_x + F^x_z \\
D_t v_z = v_z u_x - (f + v_x) u_z - b_y + F^y_z
\end{align*}
#+end_export

* composite z
#+BEGIN_SRC jupyter-python
t = xr.DataArray(np.arange(100), dims=["time"])
z = xr.DataArray(-1*np.arange(0, 200.0), dims=["z"])
field = np.exp(-(t/40)**2+z/150).assign_coords(z=z, time=t)
mld = -10 * xr.ones_like(t)
dcl = -40 * xr.ones_like(t)
dcl[50:] = -10

field.plot(x="time", zorder=-10)
mld.plot()
dcl.plot()

znew = xr.full_like(z, fill_value=np.nan)
znew = xr.where(z > mld, z-mld, z)

plt.figure()
znew.plot()
#+END_SRC
* Deep cycle notes
1. detect descending shear layer depth
2. does this coincide with KPPhbl?

Off the equator descending shear coincides with descending KPP boundary layer
At the equator it doesn't coincide /always/
* NSF proposal notes

** proposal abstract

The equatorial Pacific is the site of large oceanic heat uptake enabled by small-scale turbulence, and the site of a severe error in climate models: too cold temperatures that extend too far westward.
Lead PI Prof. James Moum (Oregon State University), has been making time series measurements of turbulence on moorings in the tropical Pacific since 2005.
This unique dataset has been used to document turbulence variability on monthly, seasonal and interannual (ENSO) timescales.
Independently, NCAR (Bachman, CGD) has recently run a 20 year 1/20° realistically forced MITgcm simulation saving both hourly averaged fields, at virtual moorings in the same locations as those of Moum's instruments, as well as domain-wide daily averaged fields.
These saved fields include turbulence terms.

Our goal is to exploit this synergy by jointly analyzing the MITgcm simulation and Moum's turbulence dataset to
1. understand the physical mechanisms through which turbulence varies on daily (deep cycle turbulence) to monthly (Tropical Instability Waves) to seasonal to interannual (ENSO) to decadal time scales (global warming hiatus vs. post-hiatus); and
2. assess the fidelity and shortcomings, across this large range of timescales, of a widely used ocean turbulence parameterization scheme developed at NCAR (KPP; Large, McWilliams & Doney 1994).

This work will serve the university community by
1. using NCAR modelling expertise and NCAR-produced datasets to enable a thorough dynamical analysis of public observational datasets collected by the OSU Ocean Mixing Group;
2. evaluating a widely used ocean turbulence parameterization scheme over a wide range of time scales in a region where said parameterization is particularly influential in setting the mean state

** prior results

Cascading of Ocean Waters at the Continental Shelf Edge: Winds, Cooling and Stability
OCE1433953
Period: 08/15/2014 - 07/31/2019

Intellectual Merit: This award to PI K. Brink (WHOI) partially funded Cherian's thesis research work on a long-standing problem in coastal oceanography viz. the the export of shelf water by Gulf Stream warm-core rings at northeastern US shelfbreak. The work used idealized numerical model experiments to illustrate that shelf-eddy interaction spins up multiple O(10km) small-scale cyclones containing shelf water, and that the resulting shelf-water export is permanent (Cherian & Brink, 2016). A second facet of the work developed scalings for the vertical structure of cross-shelf flows, the on-shelf origin of exported shelf water as well as the extent to which eddy water penetrates on to the shelf (Cherian & Brink, 2018).
Broader Impacts: The simulations produced formed the basis for summer undergraduate research projects supervised by WHOI scientists Dr. I. Rypina & Dr. L. Pratt; with research conducted by liberal-arts undergraduates (S. Entner, A. Anderson). Cherian helped Anderson & Entner with aspects of data analysis and interpretation. This project resulted in one publication with both Anderson and Entner as co-authors (Rypina et al 2020)

** budget justification

Cherian (NCAR) will be responsible for jointly analyzing the NCAR model output along with the OSU observational data from the tropical Pacific. He will work closely with lead PI Moum (OSU) on all aspects of the analysis and will draw on prior experience working with both χpod data as well as NCAR simulations. Salary support of 2, 2, 2, 2, 0 months is requested.

** summary
*** NCAR resources:
- 1/20°; 20 year; 10S-10N; 95W-170W; 1999-2018
  - daily averaged heat & momentum budget terms in full domain
  - "moorings" with hourly averaged state vars; visc, diff at TAO locations
- 1/100°: 1 year; Sep-1995 - Feb 1997
  - has submesoscales
  - heat, momentum budget terms
- LES of TIW influenced deep cycle [to be run]:
  - at least two (Dan?)
  - one at equator; one off equator;
  - forced with tendencies from MITgcm simulations
- 1/10° POP output
  - ???

- other climate simulations

*** Analysis
- How do TIWs modulate deep cycle at the equator?
  - data in 2008 show weak modulation of
  - extend Inoue et al (1/3°);
  - higher res model; resolve daily cycle with mooring output;
  - much longer χpod data record

- How well does KPP represent modulation of deep cycle by TIWs?
  - Use EQUIX microstructure data (2008) with both models.

- dynamics of the upper core layer
  - EQUIX microstructure + models

- hiatus

** text
*** general shear mixing text

The eastern equatorial Pacific is where shear mixing turbulence schemes are most influential, contributing significant heat uptake citep:Holmes2019 helping to keep the sea surface cool.
These cold SSTs are what make the equatorial Pacific a pacemaker of the global climate system.
It is thus /essential/ that these mixing schemes accurately represent the magnitude and phase of turbulence variability from daily to decadal timescales.
So far, the long term performance of shear mixing parameterization schemes has only been judged /indirectly/ by comparing mean property fields even though biases in such fields may results from other model errors (for e.g. citealp:Large1994,Large1999).
The χpod observations offer the possibility of testing the performance of existing schemes (e.g. KPP; citealp:Large1994) /directly/ by comparing heat flux and diffusivity estimates over a wide range of time scales.
# Such joint model-microstructure analysis has only been attempted once before citep:Zaron2009.
*** model resources

Our model analysis will center around a realistically forced 1/20° simulation of the eastern equatorial Pacific between 95°W to 170°W, 12°S to 12°N from 1999 to 2018.
The JRA55-do cite:jra55 dataset is used for atmospheric forcing and lateral boundary condition are prescribed using output from the Mercator GLORYS 1/12° reanalysis product.
Vertical mixing is paramterized using the KPP citep:Large1994 scheme.
Saved output includes daily averaged state variables as well as daily averages of all heat and momentum budget terms.
In addition, hourly averaged state and turbulence variables were saved at multiple virtual moorings.
These moorings were placed at the TAO mooring locations as well as one grid point north, south, east and west of the TAO mooring allowing us to estimate lateral gradients of all saved quantities.

A second NCAR model resource is an approximately 1/10° global simulation using the ”Parallel Ocean Program” (POP2) forced by the JRA55-do citep:jra55 dataset and previously reported in cite:Bryan2015.
Vertical resolution is 10 m in the top 200m and increases to 250m in the deep ocean.
Vertical mixing is parameterized using the KPP citep:Large1994 scheme.
The saved output includes 5-day averages of all heat budget terms including the diffusive flux.
This dataset will be used primarily for comparison with the PIRATA \cpod data, and as an independent dataset with which to check KPP's performance over long timeperiods in the tropical Pacific.

*** TIW modulation of mixing

Years with energetic TIW activity tend to have cooler annual mean SSTs citep:Moum2009b.
Is this because of mixing? Or is it that anomalously cool years have more energetic TIWs?

| Dataset               | mean heat flux | Reference      | Note                        |
|-----------------------+----------------+----------------+-----------------------------|
| EQUIX profiling       | 400 W/m²       | cite:Moum2009  | Half a TIW period           |
| EQUIX χpods           | 100 W/m²       | cite:Inoue2019 | 7 TIW periods               |
| Tropic Heat 1984      | 50W/m² ?       | ???            |                             |
| TIWE 1991             | 40W/m²         | ???            |                             |
| Long-term χpod record | 50-100 W/m²    | cite:Moum2013  | seasonal means of χpod data |

TIWs apepar to drastically increase shear mixing in the cold tongue (Table 1).
The observational evidence for this modulation rests on 2 weeks of microstructure profiling (average heat flux O(400W/m²) citealp:Moum2009b) and 6 months of moored χpod data (average heat flux O(100W/m²) over 7 TIWs citealp:Inoue2019) obtained as part of the EQUIX experiment.
When compared with seasonal means of O(50W/m²) to O(100W/m²) citep:Moum2013, these short observations suggest that TIWs significantly modulate equatorial mixing at 140°W.
The EQUIX data also show that TIWs modulate the deep cycle: during the southward phase, the deep cycle is seen to shoal by approximately a factor of 2.
There are two explanations for this behaviour:
1. The southward advection of higher stratification water caps the deep cycle layer citep:Inoue2019. However a zone of high mixing appears just above the EUC and below the deep cycle layer (the "upper core layer") mitigating the shallowing of the deep cycle.
2. A recently discovered mode-2 TIW variability (called subsurface TIWs or subTIWs) appears to significantly modulate the shear and stratification above the EUC.
Despite the factor of 2 change in deep cycle layer depth, cite:Inoue2019 suggest that vertically-averaged heat flux only changes by O(20W/m²) or so during an entire TIW period. /But is this a representative result?/

We will constrain the magnitude and phase variations of TIW-forced mixing by using the long χpod record along with hourly averaged "mooring" output from the 1/20° MITgcm model.
Our target questions and proposed approaches are:
1. *Question* Are the EQUIX observations over a single TIW season a statistically robust estimate of TIW modulated turbulence?
   *Approach:* We will generate a TIW composite over all χpod data to characterize the average magnitude and phase variation of turbulence modulated by TIWs
   1. We will work in a non-dimensional depth-time coordinate system where time (or phase) is referenced using band-pass filtered vertically averaged $v$ as in cite:Inoue2019; and with depth normalized by the depth of the EUC maximum.
   2. All turbulence quantities will be normalized by their maximum value in a TIW period. This approach has been shown to be necessary in a compositing analysis using similar turbulence data citep:Becherer2020.
   3. A composite average using all available χpod data will be constructed in a depth-time frame; extending the vertically averaged analysis of cite:Inoue2019 to account for variations in the vertical structure of the mixing; as well as adding statistical robustness from the much longer χpod data record.
   4. The procedure to construct such composites will be refined by using both the model output, as well as the intensive EQUIX microstructure profiling and χpod observations.
2. *Question* Does KPP accurately reflect the quantitative variations of mixing with TIW phase?
   *Approach* Construct equivalent composites using the hourly averaged mooring output and evaluate against the observational composite.
3. *Question* ????
   *Approach* Use the EQUIX observations to nudge LES (collaboration with D. Whitt)
   1. This aspect of the project will work closely with current NOAA-funded research by D. Whitt and colleagues at NCAR (see letter of support). We request funding to consolidate the EQUIX microstructure and state variable observations into a clean dataset that can then be used to confront the LES simulation as well as function as a nudging dataset for that LES simulation.
   2. If successful, this work will result in a clean observational dataset, an LES simulation and a detailed analysis of the regional simulation with parameterized turbulence during the same time period. These pieces can then be used to guide the development of a future shear mixing parameterization scheme.


Long term effects of TIW-modulated mixing
  - "One possibility is that cooler temperatures may increase TIW activity through enhanced baroclinicity. However, if our detailed observations are broadly representative, then TIWs induce the cooling via mixing"
  - "Our results suggest that the cool anomalies (1–2 K) on annual timescales can be more than fully accounted for by the shear-induced mixing caused by TIWs"
  - Can we use heat budget terms in the model to examine this over 20 years?

**** old
- cite:Moum2009: Stronger TIW → cooler annual mean SSTs in data
  - "One possibility is that cooler temperatures may increase TIW activity through enhanced baroclinicity. However, if our detailed observations are broadly representative, then TIWs induce the cooling via mixing"
  - "Our results suggest that the cool anomalies (1–2 K) on annual timescales can be more than fully accounted for by the shear-induced mixing caused by TIWs"
  - Can we use heat budget terms in the model to examine this over 20 years?

- Hypothesis for TIW influence on turbulence: horizontal vortex stretching v_y u_z ⇒ more negative u_z citep:Holmes2015
  - EQUIX obs: ship ADCP + TAO mooring → estimate v_y. (during IOP could also use shipboard ADCP)
  - citep:Inoue2019 show v_y for one period (their Figure 9).
  - could do TIW composites of v_y u_z; why is this not in citep:Inoue2019
  - Can we estimate $v_y$ using χpod pitot velocities and the TAO ADCP buoy that is offset from the mooring with Χpods, T, S etc? Actually aren't there current meters on the T, S mooring?

- modulation of the deep cycle layer by TIWs
  - Combined analysis of the long-term χpod data and shorter EQUIX data in a "deep-cycle" vertical coordinate frame e.g. referenced to the base of the mixed layer and to the base of the deep cycle layer.
  - Focus on TIW modulation of vertical structure of deep cycle layer. (visibile in cite:Inoue2019 figures but not really discussed in the text)
  - cite:Inoue2019 suggest that phase modulation is somewhat weak.
    - but this is only one season
    - Long χpod record = better statistics
  - citep:Inoue2019 (mostly) work with vertical averages. Also the residuals are as big as the tendencies in their S², N² budgets (!)

- Biases in KPP representation of a deep cycle?
  - Daily shear layer descent is (sometimes) represented by increasing Monin-Obukhov length in the afternoon.
  - We can test this using bullk fluxes from shipboard met measurements that are coincident with microstructure profiles

*** Timeline:
1. Y1: focus on EQUIX and variation of turbulence with TIW phase
   1. Consolidate EQUIX datasets (TAO mooring, UW APL mooring, microstructure profiles) into a clean gridded T, S, u, v dataset that can be used as "relaxation" in LES simulations (led by Whitt). Turbulence data will be analyzed together with LES output to build a picture of 1D dynamics at TIW front
   2. Use consolidated picture from microstructure profiles; LES; and moored χpods to design a coordinate reference frame within which to analyze the deep cycle in extended χpod record

2. Y2
   1. Analyze variation of deep cycle turbulence over entire χpod record. Assess accuracies and biases in KPP representation in the 20 year MITgcm simulation.

   2. Study links in turbulence variability with TIW KE; SST anomalies etc (?)

3. Y3
   1. hiatus stuff?

4. Y4
   1. ??????

*** model analysis

We will use NCAR's hierarchy of models to provide both larger-scale 3D context (through the POP and MITgcm output) and fine vertical-scale context (through the LES) to the moored observations at discrete points in the water column.
The analysis of high resolution model output has yielded significant unanticipated process-level insights in the past: for e.g. the strong mixing associated with TIWs and the connection to SST \cite{Menkes2008}, the role of horizontal vortex stretching by TIWs in modulating $Sh^2$ in the deep cycle layer at the equator \citep{holmes2015} and the existence of an off-equatorial deep cycle of turbulence, intimately linked to /horizontal vortex tilting/ (Cherian et al, in prep).
These insights have resulted from the ability to diagnose all terms in the heat budget equation and the shear evolution equation as is only possible using model output.

Accordingly we propose two major avenues of joint model-data analysis:
1. Event-scale analysis that rests on the ability to quantify advection terms and other quantities such as vortex stretching and tilting in the model.
   1. What are the dynamics that lead the factor of two shallowing of the deep cycle layer under TIW modulation?
   2. How well does KPP represent the TIW phase modulation of mixing as documented by \cpods~ and as simulated in fine vertical detail by the LES?
   We will begin by generating phase averages of the hourly model output using the same procedure as observations and working from there. Additional context from the daily averaged 3D fields will be incorporated as needed. Particular focus will be placed on understanding the vertical structure of these terms (which we suspect is key to understanding the vertical variation of the turbulence); the vertically averaged budget has already been studied by \cite{holmes2015} and \cite{inoue2019}.

2. An analysis of annual to decadal variability of the mixing term and its impact on the heat budget of the cold tongue:
   1. How important was mixing to the heat budget of the cold tongue during the hiatus (2005-12), especially relative to the wind-forced meridional divergence discussed in \cite{england2014}?
   2. How do we reconcile the intense mixing forced by TIWs with the mismatch between peak TIW KE in Sept-Dec and peak cooling by mixing in June-August?
   3. How does the annual cycle of heat flux vary by ENSO phase? Are the patterns in Figure 5b representative?

All aspects of the above joint model-data analysis will be moderated by an assessment of model biases relative to both the \cpod~observations and the TAO moored data.
The equatorial Pacific's cold SST makes it a pacemaker of the global climate system (e.g. \cite{kosaka2013}), and subsurface mixing is a major contributor to keeping the cold tongue cold.
It is thus /essential/ that ocean mixing schemes accurately represent the magnitude and phase of turbulence variability from daily to decadal timescales.
So far, the long term performance of shear mixing parameterization schemes has only been judged /indirectly/ by comparing mean property fields even though biases in such fields may results from other model errors (for e.g. citealp:Large1994,Large1999).
The \cpod~observations offer the possibility of \emph{directly} testing the performance of existing schemes (e.g. KPP; citealp:Large1994) by comparing heat flux and diffusivity estimates over a wide range of time scales.
We expect the analysis to lend a more complete dynamical context to the observations, as well as a nuanced picture of model biases with respect to the turbulent mixing field.

** Lit
- cite:Kosaka2013
  - specify relaxation towards HadCRUT SST as part of sensible heat flux forcing. Relaxation only in eastern tropical Pacific.
  - this is enough to replicate the hiatus
  - current hiatus is part of natural climate variablility (likely, not much evidence); linked to La Nina like eq pacific cooling.
  - lots of regional impacts
- cite:England2014
  - increased eastward pacific trade winds during 1990s, 2000s
  - hiatus correspond to -ve IPO (interdecadal Pacific Oscillation)
  - El-Nino-like during +ve phase; and La Nina like during -ve phase
  - increased /meridional/ convergence of heat in the pycnocline,
  - EUC is apparently accelerating
  - warmer SSTs in warm pool; cooler SSTs in cold pool
  - no mention of mixing BUT cooling trends for depth < 125m and warming trends for depth > 125m in ocean reanalyses
    - signal between 10°S and 10°N
    - how does this line up with the Argo stuff
- cite:Meehl2011:
  - in projections hiatus decades have warming below 300m and less warming above 300m
** tiumeline



\begin{enumerate}
\item Y1: focus on EQUIX and variation of turbulence with TIW phase
\begin{enumerate}
\item Consolidate EQUIX datasets (TAO mooring, UW APL mooring, microstructure profiles) into a clean gridded $T, S, u, v$ dataset that can be used as relaxation in LES simulations (led by Whitt, NCAR). Turbulence data will be analyzed together with LES output to build a picture of 1D dynamics at TIW front
\item Use consolidated picture from microstructure profiles; LES; and moored \cpods to design a coordinate reference frame within which to analyze the deep cycle in extended \cpod record
\end{enumerate}

\item Y2
\begin{enumerate}
\item Analyze variation of deep cycle turbulence over entire χpod record. Assess accuracies and biases in KPP representation in the 20 year MITgcm simulation.

\item Study links in turbulence variability with TIW KE; SST anomalies etc (?)
\end{enumerate}

\item Y3
\begin{enumerate}
\item hiatus stuff?
\end{enumerate}

\item Y4
\begin{enumerate}
\item ??????
\end{enumerate}
\end{enumerate}

* KPP validation notes

1. cite:Large1994 tweak the surface layer mixing parameters by comapring 1D model integrations (with observed forcing) to /mid-latitude/ observations over short periods.
   - Convection using cite:Anis1994 : Set C_v=1.5 to get β_T = -0.2
   - mixed layer deepening from Ocean Storms
     "A more quantified determination of Ri_c is provided by comparisons with observed ocean responses during the Ocean Storms experiment"
   THe scheme is then tested with longer integrations
   - LOTUS : 1 week ?
   - OWS Papa : annual cycle over 4 years; issues with advection in the fall

2. cite:Large1999 use equatorial LES of deep cycle to set interior mixing parameters.
   "Large et al. (1994) use midlatitude ocean observations and model simulations to determine standard values for the boundary layer parameters of KPP (e.g., Ric = 0.3). All 1D KPP model results presented here use the same values. However, midlatitude conditions are not suitable for exploring interior mixing. Therefore the LES results are now used to determine suitable values for the interior mixing parameters of section 2."

3. cite:Large1999 run the Gent & Cane reduced gravity, no-salinity model for 4 years and don't conclude anything
   "We conclude from Figs. 9 and 10 that the control and KPP runs have about equal skill in reproducing the TOGA-TAO annual means. However, this skill is not high for zonal velocity in the western Pacific and for temperature in the eastern Pacific. Thus, we conclude that trying to differentiate between vertical mixing schemes in the context of a GCM by comparing to observations is not straightforward. The reasons are that the wind stress and heat flux forcings of the equatorial Pacific are not known exactly, and the GCM has deficiencies not related to the vertical mixing scheme, such as no salinity variable."
* abstracts
*** AGU
**** initial

Title: Off-equatorial deep cycle turbulence forced by Tropical Instability Waves in the equatorial Pacific cold tongue
DA Cherian, S. Bachman, R. Holmes, R-C Lien, W. Large, DB Whitt

Being cold surface water in a region of large solar insolation, the equatorial Pacific cold tongue is a region of large heat uptake by the ocean (e.g. Holmes et al., 2019).
Such heat uptake is only possible if the heat taken in by the ocean is quickly transported away from the sea surface.
The surface then remains cool enabling further heat uptake.
Microscale turbulence provides the necessary downward transport of heat and is thus essential to keeping the cold tongue cold (e.g. Moum et al., 2013; Wang and McPhaden, 1999).

Observations at 0°N, 140°W repeatedly show the existence of a daily cycle of shear-driven turbulence — the “deep cycle of turbulence” — in the strongly sheared marginally stable flow (Richardson number Ri ≈ 0.25) above the core of the Equatorial Undercurrent (EUC) but beneath the base of the mixed layer.
Observations also indicate that the deep cycle of turbulence is modulated by Tropical Instability Waves (TIWs; Moum et al, 2009).
However these microstructure observations have only been recorded at the equator.

We find that simulated TIWs in a 1/20° realistically-forced regional configuration of the MITgcm force an off-equatorial deep cycle of turbulence.
The TIWs force intense vertical shear (∂v/∂z) and deep cycle turbulence in the eastward extension of a TIW’s cold cusp (usually between 3°N and 5°N).
The enhanced ∂v/∂z is a result of the rotation (tilting) of ∂u/∂z (or horizontal vorticity) initially generated by vortex stretching near the equator.
Indirect observational evidence for this TIW-forced off-equatorial deep cycle is seen in Richardson number profiles from historical cruise sections through TIWs at 110°W — these show Ri ≈ 0.25 at 4°N or 5°N during times of TIW influence.
The off-equatorial deep cycle is visible throughout the simulated cold tongue, and expands the region of oceanic heat uptake to outside the zone of direct EUC influence (approximately 3°S - 3°N).
These results emphasize the need to observe turbulence variability off the equator.
**** final
Title: Off-equatorial deep cycle turbulence forced by Tropical Instability Waves in the equatorial Pacific cold tongue
DA Cherian, S. Bachman, R. Holmes, R-C Lien, W. Large, DB Whitt

Being cold surface water in a region of large solar insolation, the equatorial Pacific cold tongue is a region of large heat uptake by the ocean (e.g. Holmes et al., 2019). Such heat uptake is only possible if the heat absorbed at the surface by the ocean is quickly exported away. Microscale turbulence contributes to this export by transporting heat downward and is thus essential for keeping the cold tongue (e.g. Moum et al., 2013; Wang and McPhaden, 1999).

Observations at 0°N, 140°W repeatedly show the presence of a daily cycle of shear-driven turbulence — “deep-cycle turbulence” — in the strongly sheared marginally stable flow (gradient Richardson number Ri ≈ 0.25) above the core of the Equatorial Undercurrent (EUC) but beneath the base of the surface mixed layer. Deep-cycle turbulence was also found to be modulated by Tropical Instability Waves (TIWs; Moum et al, 2009).However these microstructure observations have only been recorded at a few specific locations on the equator.

Here we report the presence of an off-equatorial deep-cycle turbulence forced by TIWs in a 1/20° realistically-forced regional MITgcm model. TIWs enhance the meridional component of vertical shear (∂v/∂z) resulting in deep cycle turbulence in the eastward extension of TIW cold cusps (usually between 3°N and 5°N). The enhanced ∂v/∂z is a result of the rotation (tilting) of ∂u/∂z (horizontal vorticity) initially generated by vortex stretching of SEC-EUC ∂u/∂z near the equator. Indirect observational evidence for this TIW-forced off-equatorial deep cycle is seen in Richardson number profiles from historical cruise sections crossing TIWs at 110°W which show Ri ≈ 0.25 at 4°N or 5°N. The off-equatorial marginal stable layer is visible throughout the longitudinal extent of the simulated cold tongue, and expands the region of oceanic heat uptake to outside the zone of direct EUC influence (approximately 3°S - 3°N).

These results emphasize the need to observe turbulence variability off the equator.
Ongoing efforts are targeted at studying the off-equatorial deep cycle using large eddy simulations; and constraining its importance to the cold tongue's heat budget.

*** UBC

Title: Off-equatorial deep cycle turbulence forced by Tropical Instability Waves in the equatorial Pacific cold tongue

Being cold water in a region of large solar insolation, the equatorial Pacific cold tongue is a region of large heat uptake by the ocean (e.g. Holmes et al., 2019).
Such heat uptake is only possible if the heat taken in by the ocean is quickly transported away from the sea surface.
The surface then remains cool enabling further heat uptake.
Microscale turbulence provides the necessary downward transport of heat and is thus essential to keeping the cold tongue cold (e.g. Moum et al., 2013; Wang and McPhaden, 1999).

Observations at 0°N, 140°W repeatedly show the existence of a deep-reaching daily cycle of shear-driven turbulence — the “deep cycle of turbulence” — in the strongly sheared marginally stable flow (Richardson number Ri ≈ 0.25) above the core of the Equatorial Undercurrent but beneath the base of the mixed layer (e.g. Gregg et al., 1985).
Observations also indicate that the deep cycle of turbulence is modulated by Tropical Instability Waves (TIWs; Moum et al, 2009).
However these microstructure observations have only been recorded at the equator.

We find that simulated TIWs in a 1/20° realistically-forced regional configuration of the MITgcm force an _off-equatorial_ deep cycle of turbulence.
The TIWs force intense vertical shear (∂v/∂z) and deep cycle turbulence in the eastward extension of a TIW’s cold cusp (usually between 3°N and 5°N).
The enhanced shear results from the rotation or tilting of horizontal vorticity initially generated by horizontal vortex stretching at the equator.
Indirect observational evidence for this TIW-forced off-equatorial deep cycle is seen in Richardson number profiles from three historical cruise sections through TIWs at 110°W — these show Ri ≈ 0.25 at 4°N or 5°N during times of TIW influence.
The off-equatorial deep cycle is visible throughout the simulated cold tongue, and expands the region of oceanic heat uptake to outside the zone of EUC influence (approximately 3°S - 3°N).
These results emphasize the need to observe turbulence variability off the equator.
* proposal
